#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)
PKGCAT="apps/$(basename $(dirname $CWD))"
NAMESRC=${NAMESRC:-firefox}
VERSION=${VERSION:-10.0}
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-mozilla-firefox}
BUILD=${BUILD:-2}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets/$PKGCAT}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}
PKG_CONFIG_PATH32=${PKG_CONFIG_PATH32:-/usr/lib/pkgconfig}
PKG_CONFIG_PATH64=${PKG_CONFIG_PATH64:-/usr/lib64/pkgconfig}

WGET=${WGET:-ftp://ftp.mozilla.org/pub/$NAMESRC/releases/$VERSION/linux-x86_64/fr/$NAMESRC-$VERSION.$EXT}
DOC="AUTHORS BUGS ?hange?og* *CHANGES* CODING* Contents *COPYING* EXPAT HACKING \
	*INSTALL* KNOWNBUGS *LEGAL* *LICENSE* MAINTAINERS *NEWS* *README* THANKS TODO \
	TRANSLATORS *license* *readme*"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Le navigateur Web de la fondation Mozilla"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}/usr/bin
mkdir -p ${PKG}/usr/lib64/${NAMESRC}/chrome/icons/default
mkdir -p ${PKG}/usr/lib64/${NAMESRC}/defaults/{pref,profile}
mkdir -p ${PKG}/usr/share/{applications,pixmaps}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT -C ${PKG}/usr/lib64
cd ${PKG}/usr/lib64/${NAMESRC}

# On crée le répertoire général pour les plugins :
mkdir -p ${PKG}/usr/lib64/mozilla/plugins

# On place nos préférences :
cp -a $CWD/vendor.js ${PKG}/usr/lib64/${NAMESRC}/defaults/pref/

# On copie le logo et le fichier pour le bureau :
cp -a $CWD/mozilla-firefox.desktop ${PKG}/usr/share/applications
cp -a $CWD/firefox.png ${PKG}/usr/share/pixmaps

# On ajoute le fichier corrigeant la CSS pour les thèmes GTK sombres et les types MIME pour Thunderbird :
cp -a $CWD/userChrome.css ${PKG}/usr/lib64/${NAMESRC}/defaults/profile/
cp -a $CWD/mimeTypes.rdf ${PKG}/usr/lib64/${NAMESRC}/defaults/profile/

# On lie le binaire :
ln -sf ../../usr/lib64/${NAMESRC}/firefox ${PKG}/usr/bin/

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION} 2>/dev/null || true

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/usr/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

if [ -x usr/bin/update-desktop-database ]; then
	chroot . /usr/bin/update-desktop-database &> /dev/null
fi

if [ -x /usr/bin/update-mime-database ]; then
  chroot . /usr/bin/update-mime-database /usr/share/mime >/dev/null 2>&1
fi

if [ -x usr/bin/gtk-update-icon-cache ]; then
	chroot . gtk-update-icon-cache -f -t /usr/share/icons/hicolor 1>/dev/null 2>&1
fi

EOF

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spackpkg . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
