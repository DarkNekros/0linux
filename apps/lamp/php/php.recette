#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)
PKGCAT="apps/$(basename $(dirname $CWD))"
NAMESRC=${NAMESRC:-php}
VERSION=${VERSION:-5.3.10}
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-php}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets/$PKGCAT}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}
PKG_CONFIG_PATH32=${PKG_CONFIG_PATH32:-/usr/lib/pkgconfig}
PKG_CONFIG_PATH64=${PKG_CONFIG_PATH64:-/usr/lib64/pkgconfig}

WGET=${WGET:-http://fr2.php.net/get/$NAMESRC-$VERSION.$EXT/from/fr.php.net/mirror}
DOC="AUTHORS BUGS ?hange?og* *CHANGES* CODING_STANDARDS *COPYING* CREDITS EXTENSIONS \
	HACKING *INSTALL* *LEGAL* *LICENSE* MAINTAINERS *NEWS* *README* THANKS TODO \
	UPGRADING* *license* *readme*"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Le langage de programmation PHP"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT{.part,}
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}/etc/{httpd,php}

# On déballe et on se place dans les sources :
NAME=$(tar ft $CWD/${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On ajoute toutes nos extensions au 'php.ini' :
cat $CWD/php.ini.patch | patch -p1

# On place un 'httpd.conf' factice :
cp -a $CWD/httpd.conf ${PKG}/etc/httpd/

# On positionne USE_ARCH :
export USE_ARCH=32

# Compilation pour 32 bits :
SLKCFLAGS="-O2 -march=i686 -pipe"
LIBDIRSUFFIX=""
CC="gcc ${BUILD32}" CXX="g++ ${BUILD32}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH32}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc/php \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--disable-safe-mode \
	--disable-magic-quotes \
	--enable-zend-multibyte \
	--enable-mbregex \
	--enable-tokenizer=shared \
	--with-config-file-path=/etc/httpd \
	--enable-mod_charset \
	--with-layout=PHP \
	--enable-xml \
	--with-libxml-dir=/usr \
	--enable-simplexml \
	--enable-filter \
	--disable-debug \
	--with-openssl=shared \
	--with-pcre-regex=/usr \
	--with-zlib=shared,/usr \
	--enable-bcmath=shared \
	--with-bz2=shared,/usr \
	--enable-calendar=shared \
	--enable-ctype=shared \
	--with-curl=shared \
	--with-curlwrappers \
	--enable-dba=shared \
	--with-gdbm=/usr \
	--with-db4=/usr \
	--enable-exif=shared \
	--enable-ftp=shared \
	--with-gd=shared \
	--with-jpeg-dir=/usr \
	--with-png-dir=/usr \
	--with-zlib-dir=/usr \
	--with-xpm-dir=/usr \
	--with-freetype-dir=/usr \
	--enable-gd-native-ttf \
	--enable-gd-jis-conv \
	--with-gettext=shared,/usr \
	--with-gmp=shared,/usr \
	--with-iconv=shared \
	--enable-mbstring=shared \
	--enable-hash \
	--with-mysql=shared,mysqlnd \
	--with-mysqli=shared,mysqlnd \
	--with-mysql-sock=/var/run/mysql/mysql.sock \
	--enable-pdo=shared \
	--with-pdo-mysql=shared,mysqlnd \
	--with-pdo-sqlite=shared,/usr \
	--with-enchant=shared,/usr \
	--enable-shmop=shared \
	--with-snmp=shared,/usr \
	--enable-sockets \
	--with-sqlite=shared \
	--with-sqlite3=shared \
	--enable-sqlite-utf8 \
	--with-regex=php \
	--enable-sysvmsg \
	--enable-sysvsem \
	--enable-sysvshm \
	--enable-wddx=shared \
	--with-xsl=shared,/usr \
	--enable-zip=shared \
	--with-tsrm-pthreads \
	--enable-shared=yes \
	--with-apxs2=/usr/sbin/apxs \
	--enable-pcntl \
	--enable-sigchild \
	--build=${TARGET32}

make -j3 || make
fakeroot make install INSTALL_ROOT=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On renomme le binaire 32 bits pour l'envelopper :
mv ${PKG}/usr/bin/php-config{,-32}

# On re-déballe et on se re-place dans les sources :
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On re-vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On ajoute toutes nos extensions au 'php.ini' :
cat $CWD/php.ini.patch | patch -p1

# On place un 'httpd.conf' factice :
cp -a $CWD/httpd.conf ${PKG}/etc/httpd/

# On positionne USE_ARCH :
export USE_ARCH=64

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc/php \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--disable-safe-mode \
	--disable-magic-quotes \
	--enable-zend-multibyte \
	--enable-mbregex \
	--enable-tokenizer=shared \
	--with-config-file-path=/etc/httpd \
	--enable-mod_charset \
	--with-layout=PHP \
	--enable-sigchild \
	--enable-xml \
	--with-libxml-dir=/usr \
	--enable-simplexml \
	--enable-filter \
	--disable-debug \
	--with-openssl=shared \
	--with-pcre-regex=/usr \
	--with-zlib=shared,/usr \
	--enable-bcmath=shared \
	--with-bz2=shared,/usr \
	--enable-calendar=shared \
	--enable-ctype=shared \
	--with-curl=shared \
	--with-curlwrappers \
	--enable-dba=shared \
	--with-gdbm=/usr \
	--with-db4=/usr \
	--enable-exif=shared \
	--enable-ftp=shared \
	--with-gd=shared \
	--with-jpeg-dir=/usr \
	--with-png-dir=/usr \
	--with-zlib-dir=/usr \
	--with-xpm-dir=/usr \
	--with-freetype-dir=/usr \
	--enable-gd-native-ttf \
	--enable-gd-jis-conv \
	--with-gettext=shared,/usr \
	--with-gmp=shared,/usr \
	--with-iconv=shared \
	--enable-mbstring=shared \
	--enable-hash \
	--with-mysql=shared,mysqlnd \
	--with-mysqli=shared,mysqlnd \
	--with-mysql-sock=/var/run/mysql/mysql.sock \
	--enable-pdo=shared \
	--with-pdo-mysql=shared,mysqlnd \
	--with-pdo-sqlite=shared,/usr \
	--with-enchant=shared,/usr \
	--enable-shmop=shared \
	--with-snmp=shared,/usr \
	--enable-sockets \
	--with-sqlite=shared \
	--with-sqlite3=shared \
	--enable-sqlite-utf8 \
	--with-regex=php \
	--enable-sysvmsg \
	--enable-sysvsem \
	--enable-sysvshm \
	--enable-wddx=shared \
	--with-xsl=shared,/usr \
	--enable-zip=shared \
	--with-tsrm-pthreads \
	--enable-shared=yes \
	--with-apxs2=/usr/sbin/apxs \
	--enable-pcntl \
	--enable-sigchild \
	--build=${TARGET64}

make -j3 || make
fakeroot make install INSTALL_ROOT=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On renomme le binaire 64 bits pour l'envelopper :
mv ${PKG}/usr/bin/php-config{,-64}

# On lie un faux binaire au programme enveloppe :
ln -sf multiarch_wrapper ${PKG}/usr/bin/php-config

# On place la configuration 'php.ini' :
cp php.ini-development ${PKG}/etc/php/php.ini

# On en a fini avec le 'httpd.conf' :
rm -rf ${PKG}/etc/httpd

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION} 2>/dev/null || true

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/usr/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spackpkg . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
