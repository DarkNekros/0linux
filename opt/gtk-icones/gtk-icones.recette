#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

VERSION=${VERSION:-0.1}
NAMETGZ=${NAMETGZ:-gtk-icones}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-noarch}

WGET="1002/ICON-BlankOn.tar.gz 1049/ICON-DroplineEtiquette.tar.bz2 1100/ICON-DroplineNeu.tar.bz2 \
	1112/ICON-DroplineNuovo.tar.bz2 1281/ICON-GFlatSVG.tar.gz 1001/ICON-Gartoon.tar.gz \
	1340/ICON-Gion.tar.bz2 1352/ICON-Gnome218IconTheme.tar.bz2 1376/ICON-GNOMEAlternatives.tar.gz \
	1297/ICON-Gorilla.tar.bz2 1136/ICON-Humility.tar.gz 1051/ICON-Iris.tar.bz2 1138/ICON-JiniIconTheme.tar.gz \
	1127/ICON-KearonesIcons.tar.gz 1008/ICON-Kreski-Lines.tar.gz 1339/ICON-Lila.tar.bz2 \
	1153/ICON-NerdyLines.tar.bz2 1269/ICON-OpenWorld.tar.bz2 1006/ICON-SmoothGNOME.tar.gz \
	1111/ICON-StillLife.tar.bz2 1184/ICON-StillLifeBrushed.tar.gz 1053/ICON-Suede2.tar.bz2 \
	1261/ICON-TangoMateria.tar.gz 1168/ICON-Yasis.tar.bz2 1128/ICON-YattaBlues.tar.gz"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Ensemble d'icônes pour GTK+"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
for archive in ${WGET}; do
	if [ ! -r $(basename ${archive}) ]; then
		wget -vc http://art.gnome.org/download/themes/icon/${archive} -O $(basename ${archive}).part
		mv $(basename ${archive}){.part,}
		# On les vérifie :
		tar ft $(basename ${archive}) 1> /dev/null 2> /dev/null
	fi
done

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}/usr/share/icons

# On déballe les sources :
echo "Extractions en cours..."
for tarball in $CWD/*.tar.{gz,bz2}; do
	tar --atime-preserve=system xf ${tarball} -C ${PKG}/usr/share/icons 
done

# On vérifie les permissions :
find ${PKG} \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On copie les sous-répertoires dans la doc :
for srcdir in $(find * -type d -maxdepth 0); do
	mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/${srcdir}
	(
		cd ${srcdir}
		for docfile in $(find * -type f -maxdepth 0); do
			mv ${docfile} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/${srcdir}
		done
	)
	# Puis on ramène les fichiers importants pour les thèmes :
	for themefile in index.theme icon-theme.cache iconrc; do
		mv ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/${srcdir}/${themefile} ${PKG}/usr/share/icons/${srcdir}
	done
done

# On nettoie cette poubelle :
rm -f ${PKG}/usr/share/icons/*/*~
rm -f ${PKG}/usr/share/icons/Jini{Brown,Orange,YellowishGreen}/ChangeLog
rm -f ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/*/*~

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

if [ -x usr/bin/update-desktop-database ]; then
	chroot . /usr/bin/update-desktop-database &> /dev/null
fi

if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -x usr/bin/gtk-update-icon-cache ]; then
	chroot . /gtk-update-icon-cache -f -t /usr/share/icons/hicolor 1>/dev/null 2>&1
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
