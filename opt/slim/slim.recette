#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

NAMESRC=${NAMESRC:-slim}
VERSION=${VERSION:-1.3.1}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-slim}
BUILD=${BUILD:-3}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}

WGET=${WGET:-http://download.berlios.de/$NAMESRC/$NAMESRC-$VERSION.$EXT}
DOC="COPYING ChangeLog INSTALL README THEMES TODO xinitrc.sample"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Gestionnaire de connexion graphique léger"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On modifie le Makefile pour le 64 bits et X11 :
sed -i '10 s@lib@lib64@' Makefile
sed -i -e "s:^CXX=.*:CXX=$(which g++) ${BUILD64}:" \
	-e "s:^CC=.*:CC=$(which gcc) ${BUILD64}:" \
	-e "s:/usr/X11R6:/usr:" Makefile

# On corrige une erreur de compilation avec gcc 4.4.x :
cat $CWD/slim.gcc44.patch | patch -p0

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
sed -i "s,^CFLAGS=,CFLAGS=$SLKCFLAGS ," Makefile

make
fakeroot make install DESTDIR=${PKG}

# On ajoute quelques thèmes indépendants :
for theme in capernoited fingerprint flat flower2 lake mindlock \
parallel-dimensions previous rainbow rear-window scotland-road subway wave; do
	
	# On télécharge chaque thème :
	if [ ! -r $CWD/slim-$theme.tar.* ]; then
		SOURCE="http://download.berlios.de/slim/slim-${theme}.tar.gz"
		wget -vc ${SOURCE} -O $CWD/slim-${theme}.tar.gz.part
		mv $CWD/slim-${theme}.tar.gz.part $CWD/slim-${theme}.tar.gz
	fi
	
	# On les vérifie :
	tar ft $CWD/${NAMESRC}-${VERSION}.tar.gz 1> /dev/null 2> /dev/null
	
	# On les extrait où il faut :
	tar -xf $CWD/slim-${theme}.tar.gz -C ${PKG}/usr/share/slim/themes;
	chmod 644 ${PKG}/usr/share/slim/themes/${theme}/*
done

# On crée un fichier journal vide :
mkdir -p ${PKG}/var/log
touch ${PKG}/var/log/slim.log

# On force les journaux à tourner pour éviter qu'ils ne grossissent :
mkdir -p ${PKG}/etc/logrotate.d
cp -a $CWD/slim.logrotate ${PKG}/etc/logrotate.d/slim.new

# On copie notre fichier de configuration en lieu et place de l'original 
# en prenant garde à ne rien écraser :
rm -f ${PKG}/etc/slim.conf
cat $CWD/slim.conf > ${PKG}/etc/slim.conf.new

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	if [ ! -f $OLD ]; then
		mv $NEW $OLD
	elif [ "$(cat $OLD | md5sum)" = "$(cat $NEW | md5sum)" ]; then
		rm -f $NEW
	fi
}

config etc/slim.conf.new
config etc/logrotate.d/slim.new

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
