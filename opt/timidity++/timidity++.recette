#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

NAMESRC=${NAMESRC:-TiMidity++}
VERSION=${VERSION:-2.13.2}
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-timidity++}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}
PKG_CONFIG_PATH32=${PKG_CONFIG_PATH32:-/usr/lib/pkgconfig}
PKG_CONFIG_PATH64=${PKG_CONFIG_PATH64:-/usr/lib64/pkgconfig}

WGET=${WGET:-http://prdownloads.sourceforge.net/timidity/$NAMESRC-$VERSION.$EXT}
WGETEAWPATS=${WGETEAWPATS:-http://www.george.ca/interests/eawpats12_full.tar.gz}
DOC="AUTHORS COPYING ChangeLog* INSTALL* NEWS README* TODO doc/C/README* \
	doc/C/FAQ doc/C/CHANGES.02i"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Synthétiseur MIDI avec le jeu de « patches » MIDI 'eawpats'"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On télécharge les « patches » MIDI 'eawpats' :
if [ ! -r eawpats12_full.tar.gz ]; then
	wget -vc $WGETEAWPATS -O eawpats12_full.tar.gz.part
	mv eawpats12_full.tar.gz.part eawpats12_full.tar.gz
fi

# On les vérifie :
tar ft eawpats12_full.tar.gz 1> /dev/null 2> /dev/null || true

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT || true
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On décommente l'emplacement de la configuration dans /etc :
sed -i "s|/\* #define CONFIG_FILE \"/etc/timidity.cfg\" \*/|#define CONFIG_FILE \"/etc/timidity.cfg\"|" timidity/timidity.h

# On corrige d'importants problèmes avec ces correctifs de Debian :
cat $CWD/timidity++.autoconf.patch | patch -p1
cat $CWD/timidity++.manpages.patch | patch -p1
cat $CWD/timidity++.other.patch | patch -p1
cat $CWD/timidity++.scripts.patch | patch -p1

# On positionne USE_ARCH :
export USE_ARCH=64

autoreconf -if

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--with-module-dir=/usr/lib${LIBDIRSUFFIX}/${NAMETGZ} \
	--enable-audio=alsa,flac,jack,oss,speex,vorbis \
	--enable-dynamic=gtk,motif,ncurses,tcltk,vt100 \
	--enable-alsaseq \
	--enable-server \
	--enable-network \
	--enable-spectrogram \
	--build=${TARGET64}

make
fakeroot make install DESTDIR=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On place le fichier service en veillant à ne rien écraser :
mkdir -p ${PKG}/etc/rc.d
cp -a $CWD/rc.timidity++ ${PKG}/etc/rc.d/rc.timidity++.new
chmod 755 ${PKG}/etc/rc.d/rc.timidity++.new

# On crée le fichier de ocnfiguration et on veille à n'écraser
# aucune ancienne configuration :
cat > ${PKG}/etc/timidity.cfg.new << EOF
# /etc/timidity.cfg : Fichier de configuration de TiMidity++.
# Voyez : 	'man timidity.cfg'.

EOF

# On copie les données de 'eawpats' :
NAMEEAWPATS=$(tar ft $CWD/eawpats12_full.tar.gz | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAMEEAWPATS}
echo "Extraction en cours..."
tar xf $CWD/eawpats12_full.tar.gz
cd ${NAMEEAWPATS}

# Les fichiers textes sont au format DOS... :
find . -type f -print0 | xargs -0 file | grep 'text.*CRLF' | cut -d: -f1 | xargs perl -i -pe 's/\r//g'

# On crée le répértoire des patches, la configuration en sélectionnant 
# l'emplacement à /etc et on veille à ne rien écraser :
mkdir -p ${PKG}/usr/share/sounds/eawpats
mkdir -p ${PKG}/etc/timidity
egrep -v '^($|#)' linuxconfig/timidity.cfg | sed 's,/home/user,/usr/share/sounds,' > ${PKG}/etc/timidity/eawpats.cfg.new

# On nettoie car on va tout copier par la suite :
rm -rf winconfig linuxconfig

# On place la doc :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/eawpats12
mv *.txt ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/eawpats12

# On copie le reste (les patches, donc) :
mv * $PKG/usr/share/sounds/eawpats

cd $TMP/${NAME}

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

if [ -x usr/bin/update-desktop-database ]; then
	chroot . /usr/bin/update-desktop-database &> /dev/null
fi

if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -x usr/bin/gtk-update-icon-cache ]; then
	chroot . /gtk-update-icon-cache -f -t /usr/share/icons/hicolor 1>/dev/null 2>&1
fi

config etc/timidity/eawpats.cfg.new
config etc/timidity.cfg.new
config etc/rc.d/rc.timidity++.new

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# On génère le fichier des dépendances :
. /sbin/0ldd.sh

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi
	rm -rf $TMP/${NAMEEAWPATS}"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
