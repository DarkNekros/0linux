#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaÃ®tre la licence de ce script.

PKGCAT=opt
NAMESRC=${NAMESRC:-llvm}
VERSION=${VERSION:-3.2}
EXT=${EXT:-tar.xz}
NAMETGZ=${NAMETGZ:-llvm}
WGET=(http://ftp.igh.cnrs.fr/pub/os/linux/0linux/archives_sources/$NAMESRC/${NAMESRC}-${VERSION}.${EXT} # Sources de tstellar réempaquetées
      http://llvm.org/releases/$VERSION/clang-${VERSION}.src.tar.gz
     )
DESC="L'environnement LLVM et le compilateur Clang"

. /usr/share/0outils/fonctions_paquets.sh

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# On supprime les sources embarquées de 'clang' pour les remplacer par notre archive :
	cd tools
	rm -rf clang clang-${VERSION}.src

	# On décompacte les sources du compilateur Clang :
	tar xf ${PKGSOURCES}/${NAMETGZ}/clang-${VERSION}.src.tar.gz

	# On renomme sans la version :
	mv clang-${VERSION}.src clang
	cd ..
	
	# On corrige la version absurde retournée (qui casse 'opengtl' entre autres) :
	sed -i 's/3\.2svn/3.2/g' configure
	
	# Compilation pour i686 :
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
		--disable-assertions \
		--enable-experimental-targets=R600 \
		--enable-optimized \
		--enable-shared \
		--enable-targets=all \
		--build=${PKGARCH}-0-linux-gnu
	
	# On corrige pour notre $LIBDIRSUFFIX :
	sed -i "s@\$(PROJ_prefix)/lib@&${LIBDIRSUFFIX}@" $(find . -type f -name "Makefile*")
	sed -i "s|\"lib\"|\"lib${LIBDIRSUFFIX}\"|" $(find . -type f -name "*.cpp")
	sed -i "s|ActiveLibDir = ActivePrefix + \"/lib\"|ActiveLibDir = ActivePrefix + \"/lib${LIBDIRSUFFIX}\"|g" $(find . -type f -name "*.cpp")
	
	make -j${JOBS} || make
	fakeroot make install DESTDIR=${PKG}
	
	# On corrige une référence à 'lib' dans 'llvm-config' :
	sed -i -e "s@ABS_RUN_DIR/lib\"@ABS_RUN_DIR/lib$LIBDIRSUFFIX\"@" ${PKG}/usr/bin/llvm-config
	
	# On renomme ces fichiers spécifiques à l'architecture :
	mv ${PKG}/usr/bin/llvm-config{,-32}
	mv ${PKG}/usr/include/llvm/Config/config{,-32}.h
	mv ${PKG}/usr/include/llvm/Config/llvm-config{,-32}.h
fi

# On refait la préparation des sources, il peut rester des déchets de la
# compilation en 32 bits (et make 'distclean' ne fonctionne pas toujours) :
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On supprime les sources embarquées de 'clang' pour les remplacer par notre archive :
cd tools
rm -rf clang clang-${VERSION}.src

# On décompacte les sources du compilateur Clang :
tar xf ${PKGSOURCES}/${NAMETGZ}/clang-${VERSION}.src.tar.gz

# On renomme sans la version :
mv clang-${VERSION}.src clang
cd ..

# On corrige la version absurde retournée (qui casse 'opengtl' entre autres) :
sed -i 's/3\.2svn/3.2/g' configure

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--disable-assertions \
	--enable-experimental-targets=R600 \
	--enable-optimized \
	--enable-shared \
	--enable-targets=all \
	--build=${PKGARCH}-0-linux-gnu

# On corrige pour notre $LIBDIRSUFFIX :
sed -i "s@\$(PROJ_prefix)/lib@&${LIBDIRSUFFIX}@" $(find . -type f -name "Makefile*")
sed -i "s|\"lib\"|\"lib${LIBDIRSUFFIX}\"|" $(find . -type f -name "*.cpp")
sed -i "s|ActiveLibDir = ActivePrefix + \"/lib\"|ActiveLibDir = ActivePrefix + \"/lib${LIBDIRSUFFIX}\"|g" $(find . -type f -name "*.cpp")

make -j${JOBS} || make
fakeroot make install DESTDIR=${PKG}

# On place les binaires du 'clang-analyzer' :
mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/clang-analyzer
cp -ar tools/clang/tools/scan-{build,view} ${PKG}/usr/lib${LIBDIRSUFFIX}/clang-analyzer/

# On crée les liens symboliques dans le répertoire standard des binaires :
ln -sf /usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/scan-build ${PKG}/usr/bin/
ln -sf /usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-view/scan-view ${PKG}/usr/bin/
ln -sf /usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/ccc-analyzer ${PKG}/usr/bin/
ln -sf /usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/c++-analyzer ${PKG}/usr/bin/

# On corrige une référence à 'lib' dans 'llvm-config' :
sed -i -e "s@ABS_RUN_DIR/lib\"@ABS_RUN_DIR/lib$LIBDIRSUFFIX\"@" ${PKG}/usr/bin/llvm-config

# On corrige pour notre $LIBDIRSUFFIX :
sed -i "s|\$RealBin/bin|/usr/bin|" ${PKG}/usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/scan-build
sed -i "s|\$RealBin/sorttable.js|/usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/sorttable.js|" ${PKG}/usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/scan-build
sed -i "s|\$RealBin/scanview.css|/usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/scanview.css|" ${PKG}/usr/lib${LIBDIRSUFFIX}/clang-analyzer/scan-build/scan-build

if [ "${PKGARCH}" = "x86_64" ]; then
	# On renomme ces fichiers spécifiques à l'architecture :
	mv ${PKG}/usr/bin/llvm-config{,-64}
	mv ${PKG}/usr/include/llvm/Config/config{,-64}.h
	mv ${PKG}/usr/include/llvm/Config/llvm-config{,-64}.h

	# On lie un binaire générique au progamme enveloppe :
	ln -sf enveloppe_multiarch ${PKG}/usr/bin/llvm-config

	# On crée les entêtes génériques :
	cat > ${PKG}/usr/include/llvm/Config/config.h << "EOF"
#ifndef __STUB__LLVM_CONFIG_H__
#define __STUB__LLVM_CONFIG_H__

#if defined(__x86_64__)
#	include "config-64.h"
#else
#	include "config-32.h"
#endif

#endif
EOF
	
	cat > ${PKG}/usr/include/llvm/Config/llvm-config.h << "EOF"
#ifndef __STUB__LLVM_LLVMCONFIG_H__
#define __STUB__LLVM_LLVMCONFIG_H__

#if defined(__x86_64__)
#	include "llvm-config-64.h"
#else
#	include "llvm-config-32.h"
#endif

#endif
EOF
fi

installer_doc

# On complète la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/clang
cp -a tools/clang/{docs,*.txt} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/clang/

# On déplace de la doc mal placée :
mv ${PKG}/usr/docs/llvm/* ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On supprime les archives redondantes :
rm -f ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/*.tar.gz
rm -rf ${PKG}/usr/docs

creer_post_installation
stripper
empaqueter

# C'est fini.
