#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

PKGCAT=opt
NAMESRC=${NAMESRC:-gdk-pixbuf}
VERSION=${VERSION:-2.28.1}
EXT=${EXT:-tar.xz}
NAMETGZ=${NAMETGZ:-gdk-pixbuf}
WGET=${WGET:-http://ftp.acc.umu.se/pub/gnome/sources/$NAMESRC/$(echo $VERSION | cut -d'.' -f1-2)/$NAMESRC-$VERSION.$EXT}
DESC="Bibliothèques pour GTK+"

. /usr/share/0outils/fonctions_paquets.sh

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# Compilation pour i686 :
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
		--with-included-loaders=png \
		--with-x11 \
		--build=${PKGARCH}-0linux-linux-gnu
	
	make -j${JOBS} || make
	fakeroot make install DESTDIR=${PKG}
fi

# On refait la préparation des sources, il peut rester des déchets de la
# compilation en 32 bits (et make 'distclean' ne fonctionne pas toujours) :
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--with-included-loaders=png \
	--with-x11 \
	--build=${PKGARCH}-0linux-linux-gnu

make -j${JOBS} || make
fakeroot make install DESTDIR=${PKG}

# On crée des fichiers de cache vides pour éviter les messages d'avertissement :
touch ${PKG}/usr/lib${LIBDIRSUFFIX}/${NAMESRC}-2.0/2.10.0/loaders.cache

installer_doc
creer_post_installation

# On complète la post-installation :
cat >> ${PKG}/post-install.sh << "EOF"
gdk-pixbuf-query-loaders --update-cache 2>/dev/null

EOF

stripper
empaqueter

# C'est fini.
