#!/bin/sh
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

NAMESRC=${NAMESRC:-hal}
VERSION=${VERSION:-0.5.14}
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-hal}
BUILD=${BUILD:-1}
PKGEXT=${PKGEXT:-txz}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-frenchslack-linux-gnu}
TARGET64=${TARGET64:-$ARCH-frenchslack-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}
PKG_CONFIG_PATH32=${PKG_CONFIG_PATH32:-/usr/lib/pkgconfig}
PKG_CONFIG_PATH64=${PKG_CONFIG_PATH64:-/usr/lib64/pkgconfig}

WGET=${WGET:- http://hal.freedesktop.org/releases/$NAMESRC-$VERSION.$EXT}
DOC="AUTHORS ChangeLog COPYING HACKING hal.conf INSTALL NEWS README"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Couche d'abstraction matérielle"
########################################

if [ ! -d $TMP ]; then
	echo "$TMP n'existe pas ou bien n'est pas un répertoire !"
	exit 1
fi

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null
TARERROR=$?
if [ ! "$TARERROR" = "0" ]; then
	echo "Erreur à la lecture de l'archive source. Celle-ci semble corrompue (Erreur $TARERROR)."
	exit 1
fi

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On positionne USE_ARCH :
export USE_ARCH=32

# On corrige '10-keymap.fdi' pour lui affecter un clavier « latin-9 » par défaut.
# On verra à l'usage si cette décision est trop franco-franco-centriste...
cat $CWD/hal-0.5.14.keymap-latin9-utf8.patch | patch -p1

# Compilation pour 32 bits :
SLKCFLAGS="-O2 -march=i686 -pipe"
LIBDIRSUFFIX=""
CC="gcc ${BUILD32}" CXX="g++ ${BUILD32}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH32}" \
./configure \
	--prefix=/usr \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--libexecdir=/usr/lib/hal \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--with-pid-file=/var/run/hald/pid \
	--enable-umount-helper \
	--disable-console-kit \
	--disable-policy-kit \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--build=${TARGET32}

make
make install DESTDIR=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On re-déballe et on se re-place dans les sources :
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On re-vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On positionne USE_ARCH :
export USE_ARCH=64

# On corrige '10-keymap.fdi' pour lui affecter un clavier « latin-9 » par défaut.
# On verra à l'usage si cette décision est trop franco-franco-centriste...
cat $CWD/hal-0.5.14.keymap-latin9-utf8.patch | patch -p1

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
./configure \
	--prefix=/usr \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--libexecdir=/usr/lib/hal \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--with-pid-file=/var/run/hald/pid \
	--enable-umount-helper \
	--disable-console-kit \
	--disable-policy-kit \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--build=${TARGET64}

make
make install DESTDIR=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On déplace les règles pour 'udev' où il faut :
mkdir -p ${PKG}/lib
mv ${PKG}/usr/lib/udev ${PKG}/lib

# On place le fichier de service, qu'on rend exécutable d'office :
mkdir -p ${PKG}/etc/rc.d
cp -a $CWD/rc.hald ${PKG}/etc/rc.d/rc.hald.new
chmod 755 ${PKG}/etc/rc.d/rc.hald.new

# On place notre fichier de configuration et on veille à ne rien écraser :
rm -f ${PKG}/etc/dbus-1/system.d/hal.conf
cp -a $CWD/hal.conf ${PKG}/etc/dbus-1/system.d/hal.conf.new

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.?" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/sh
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="`dirname $NEW`/`basename $NEW .new`"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "`cat $OLD | md5sum`" = "`cat $NEW | md5sum`" ]; then
		rm $NEW
	fi
}

if [ -e etc/rc.d/rc.hald ]; then
	cp -a etc/rc.d/rc.hald etc/rc.d/rc.hald.new.incoming
	cat etc/rc.d/rc.hald.new > etc/rc.d/rc.hald.new.incoming
	mv etc/rc.d/rc.hald.new.incoming etc/rc.d/rc.hald.new
fi

config etc/rc.d/rc.hald.new
config etc/dbus-1/system.d/hal.conf.new

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null \
	|| echo "Aucun binaire traité."
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null \
	|| echo "Aucune bibliothèque traitée."
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null \
	|| echo "Aucune archive traitée."

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/makepkg -l y -c n $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD.$PKGEXT
	rm -rf ${PKG}
	if [ -d $TMP/${NAME} ]; then
		rm -rf $TMP/${NAME}
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
