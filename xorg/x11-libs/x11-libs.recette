#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

VERSION=${VERSION:-7.5}
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-x11-libs}
BUILD=${BUILD:-8}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}
PKG_CONFIG_PATH32=${PKG_CONFIG_PATH32:-/usr/lib/pkgconfig}
PKG_CONFIG_PATH64=${PKG_CONFIG_PATH64:-/usr/lib64/pkgconfig}

XLIBS="libFS-1.0.3 libWindowsWM-1.0.1 libXaw-1.0.8 \
libXScrnSaver-1.2.1 libXTrap-1.0.0 libXcomposite-0.4.3 libXcursor-1.1.11 \
libXdamage-1.1.3 libXevie-1.0.3 libXfont-1.4.3 libXfontcache-1.0.5 \
libXft-2.2.0 libXinerama-1.1.1 libXprintAppUtil-1.0.1 libXrandr-1.3.1 libXres-1.0.5 \
libXtst-1.2.0 libXvMC-1.0.6 libXxf86dga-1.1.2 libXxf86misc-1.0.2 libXxf86vm-1.1.1 \
libdmx-1.1.1 liblbxutil-1.1.0 liboldX-1.0.1 libpciaccess-0.12.0 libxkbui-1.0.2"
WGET=${WGET:-http://xorg.freedesktop.org/releases/individual/lib/}
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Ensemble de bibliothèques natives de X11"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}/usr/bin

# On télécharge les sources :
for archive in ${XLIBS}; do
	
	if [ ! -r ${archive}.$EXT ]; then
		wget -vc $WGET/${archive}.$EXT -O $archive.$EXT.part
		mv $archive.$EXT.part $archive.$EXT
	fi
	
	# On les vérifie :
	tar ft ${archive}.$EXT 1> /dev/null 2> /dev/null
	
	cd $TMP
	
	# On déballe et on se place dans les sources :
	NAME=$(tar ft $CWD/${archive}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
	rm -rf ${NAME}
	echo "Extraction en cours..."
	tar xf $CWD/${archive}.$EXT
	cd ${NAME}
	
	# On vérifie les permissions des sources :
	find . \
		\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
		\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;
	
	# Compilation pour 32 bits :
	SLKCFLAGS="-O2 -march=i686 -pipe"
	LIBDIRSUFFIX=""
	CC="gcc ${BUILD32}" CXX="g++ ${BUILD32}" \
	CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
	PKG_CONFIG_PATH="${PKG_CONFIG_PATH32}" \
	LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--build=${TARGET32}
	
	make -j3 || make
	fakeroot make install DESTDIR=${PKG}
	
	# On renomme le binaire 32 bits 'xft-config' pour l'envelopper :
	if [ -r ${PKG}/usr/bin/xft-config ]; then
		mv ${PKG}/usr/bin/xft-config{,-32}
	fi
	
	cd $TMP
	
	# On re-déballe et on se re-place dans les sources :
	rm -rf ${NAME}
	echo "Extraction en cours..."
	tar xf $CWD/${archive}.$EXT
	cd ${NAME}
	
	# On re-vérifie les permissions des sources :
	find . \
		\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
		\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;
	
	# Compilation pour 64 bits :
	SLKCFLAGS="-O2 -fPIC -pipe"
	LIBDIRSUFFIX="64"
	CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
	CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
	PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
	LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--build=${TARGET64}
	
	make -j3 || make
	fakeroot make install DESTDIR=${PKG}
	
	# On renomme le binaire 64 bits 'xft-config' pour l'envelopper :
	if [ -r ${PKG}/usr/bin/xft-config ]; then
		mv ${PKG}/usr/bin/xft-config{,-64}
	fi
	
	cd $CWD
	rm -rf $TMP/${NAME}

done

# On déplace la doc de /usr/share vers /usr :
mv ${PKG}/usr/share/doc ${PKG}/usr
rm -rf ${PKG}/usr/share

# On lie un faux binaire au programme enveloppe :
if [ -r ${PKG}/usr/bin/xft-config-32 ]; then
		ln -sf multiarch_wrapper ${PKG}/usr/bin/xft-config
fi

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
