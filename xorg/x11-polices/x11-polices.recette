#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

VERSION=${VERSION:-7.5}
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-x11-polices}
BUILD=${BUILD:-1}


TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}
PKG_CONFIG_PATH32=${PKG_CONFIG_PATH32:-/usr/lib/pkgconfig}
PKG_CONFIG_PATH64=${PKG_CONFIG_PATH64:-/usr/lib64/pkgconfig}

XFONTS="encodings-1.0.3 \
font-adobe-100dpi-1.0.1 font-adobe-75dpi-1.0.1 \
font-adobe-utopia-100dpi-1.0.2 font-adobe-utopia-75dpi-1.0.2 \
font-adobe-utopia-type1-1.0.2 font-alias-1.0.2 font-arabic-misc-1.0.1 \
font-bh-100dpi-1.0.1 font-bh-75dpi-1.0.1 \
font-bh-lucidatypewriter-100dpi-1.0.1 \
font-bh-lucidatypewriter-75dpi-1.0.1 font-bh-ttf-1.0.1 \
font-bh-type1-1.0.1 font-bitstream-100dpi-1.0.1 \
font-bitstream-75dpi-1.0.1 font-bitstream-type1-1.0.1 \
font-cronyx-cyrillic-1.0.1 font-cursor-misc-1.0.1 \
font-daewoo-misc-1.0.1 font-dec-misc-1.0.1 \
font-ibm-type1-1.0.1 font-isas-misc-1.0.1 font-jis-misc-1.0.1 \
font-micro-misc-1.0.1 font-misc-cyrillic-1.0.1 \
font-misc-ethiopic-1.0.1 font-misc-meltho-1.0.1 \
font-misc-misc-1.1.0 font-mutt-misc-1.0.1  \
font-schumacher-misc-1.1.0 font-screen-cyrillic-1.0.2 \
font-sony-misc-1.0.1 font-sun-misc-1.0.1 \
font-winitzki-cyrillic-1.0.1 font-xfree86-type1-1.0.2"
WGET=${WGET:-http://xorg.freedesktop.org/releases/individual/font}
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Polices de caractères de X11"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On télécharge les sources :
for archive in ${XFONTS}; do
	
	if [ ! -r ${archive}.$EXT ]; then
		wget -vc $WGET/${archive}.$EXT -O $archive.$EXT.part
		mv $archive.$EXT.part $archive.$EXT
	fi
	
	# On les vérifie :
	tar ft ${archive}.$EXT 1> /dev/null 2> /dev/null
	
	cd $TMP
	
	# On déballe et on se place dans les sources :
	NAME=$(tar ft $CWD/${archive}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
	rm -rf ${NAME}
	echo "Extraction en cours..."
	tar xf $CWD/${archive}.$EXT
	cd ${NAME}
	
	# On vérifie les permissions des sources :
	find . \
		\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
		\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;
	
	# On positionne la variable USE_ARCH :
	USE_ARCH=64
	
	# Compilation pour 64 bits :
	SLKCFLAGS="-O2 -fPIC -pipe"
	LIBDIRSUFFIX="64"
	CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
	CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
	PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--build=${TARGET64}
	
	make
	fakeroot make install DESTDIR=${PKG}
	
	# On déplace les polices où il faut selon la configuration de 'xorg-server' :
	if [ -d ${PKG}/usr/share/fonts/X11 ]; then
		mv ${PKG}/usr/share/fonts/X11/* ${PKG}/usr/share/fonts
		rm -rf ${PKG}/usr/share/fonts/X11
	fi
	
	cd $CWD
	rm -rf $TMP/${NAME}
	
done

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
# On met à jour l'indexation des polices :
if [ -x /usr/bin/mkfontdir ]; then
	mkfontscale /usr/share/fonts
	mkfontdir /usr/share/fonts
fi

if [ -x /usr/bin/fc-cache ]; then
	/usr/bin/fc-cache -f
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# On génère le fichier des dépendances :
. /sbin/0ldd.sh

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
