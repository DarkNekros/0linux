#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.
# *** À LANCER EN ROOT ! ***

set -e
umask 022
CWD=$(pwd)

# Changer ces paramètres via la ligne de commande, par ex. :
# 	# SOURCES=/ici PAQUETS=/quelque/part LIVEOS=/ailleurs USBDEV=/dev/sdd ./construction-liveusb.recette

SOURCES=${SOURCES:-/marmite/0/sources}
PAQUETS=${PAQUETS:-/marmite/0/paquets}
LIVEOS=${LIVEOS:-/marmite/0/liveos}
INITRDGZ=${INITRDGZ:-/tmp/initrd.gz}
USBDEV=${USBDEV:-/dev/sdc}

# On crée et on vide le répertoire d'accueil :
rm -rf ${LIVEOS}
mkdir -p ${LIVEOS}

# On installe les paquets pour le LiveOS :
for paq in base-systeme* etc* eglibc* sgml*; do
	spkman -i --quiet --root=${LIVEOS} ${PAQUETS}/base/${paq}
done

spkman -i --quiet --root=${LIVEOS} ${PAQUETS}/base/*.cpio
spkman -i --quiet --root=${LIVEOS} ${PAQUETS}/xorg/*.cpio

for paq in dbus-1* expat* gcc* glib2* gmp* lesstif* libgcrypt* libgpg-error* libidn* libpng* libssh2* popt*; do
	spkman -i --quiet --root=${LIVEOS} ${PAQUETS}/opt/${paq}.cpio
done

# On allège :
rm -rf ${LIVEOS}/usr/doc/*
rm -rf ${LIVEOS}/usr/share/gtk-doc/*
rm -f ${LIVEOS}/lib/*.{a,la,so.*,so}
rm -rf ${LIVEOS}/usr/lib/*

# On copie nos fichiers spéciaux pour le Live :
install -m 644 $CWD/fstab ${LIVEOS}/etc
install -m 755 $CWD/{HOSTNAME,profile} ${LIVEOS}/etc
install -m 755 $CWD/rc.* ${LIVEOS}/etc/rc.d

# On copie l'installateur et l'aide :
install -m 755 $CWD/../scripts/{installateur,*.sh} ${LIVEOS}/sbin
install -m 644 $CWD/../scripts/aide.txt ${LIVEOS}

# On crée le lien pour 'init' :
ln -sf sbin/init ${LIVEOS}/init

# On s'assure de la présence de 'bash' :
if [ -r ${LIVEOS}/bin/bash4.new ]; then
	mv ${LIVEOS}/bin/bash{4.new,}
fi

# On va chrooter dans le système autonome :
cd ${LIVEOS}

# On désinstalle 'linux-source', inutile ici :
chroot . /sbin/spkman -r --quiet /var/log/paquets/linux-source-*.cpio

# On met à jour les liens des bibliothèques :
chroot . /sbin/ldconfig
 
# On met à jour les dépendances des modules du noyau :
chroot . /usr/sbin/depmod -a

# On évite que se lance 'sshd' (+ effet d'escalier à l'affichage) :
chroot . /bin/chmod -x /etc/rc.d/rc.sshd

# On copie le nouveau noyau dans /tmp sans sa version :
rm -f /tmp/noyau
cp -a ${LIVEOS}/boot/noyau-2* /tmp/noyau

# On crée l'initrd :
rm -f ${INITRDGZ}
find . | cpio -v -o -H newc | gzip -9 > ${INITRDGZ}
cd -

# On monte la clé, sans la presser :
mount ${USBDEV}1 /mnt/tmp 2>/dev/null
sleep 4

# On nettoie la clé :
chattr -i /mnt/tmp/extlinux/ldlinux.sys
rm -rf /mnt/tmp/extlinux
mkdir -p /mnt/tmp/0/paquets

# On copie toutes les sources de extlinux/ :
cp -a ${SOURCES}/installateur/extlinux /mnt/tmp
chown -R root:root /mnt/tmp/extlinux/*

# On copie le noyau et l'initrd :
cp -a ${INITRDGZ} /tmp/noyau /mnt/tmp/extlinux/

# On copie les paquets :
rsync -auv --delete-after ${PAQUETS}/* /mnt/tmp/0/paquets

# On copie un MBR propre :
dd if=/usr/share/syslinux/mbr.bin of=${USBDEV}1

# On installe enfin extlinux :
extlinux --install /mnt/tmp/extlinux

umount /mnt/tmp

exit 0
