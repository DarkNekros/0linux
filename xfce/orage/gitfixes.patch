From 51bc004878b82ea625e8955bf614455c894e4c86 Mon Sep 17 00:00:00 2001
From: Juha Kautto <juha@xfce.org>
Date: Thu, 11 Mar 2010 09:35:10 +0000
Subject: 4.5.7.17: Fix crash in BUG 6290

Crash part of that BUG is fixed. Still can't reproduce the garbage.
---
diff --git a/globaltime/tz_zoneinfo_read.c b/globaltime/tz_zoneinfo_read.c
index d7cd2fb..d029177 100644
--- a/globaltime/tz_zoneinfo_read.c
+++ b/globaltime/tz_zoneinfo_read.c
@@ -603,6 +603,7 @@ static int check_parameters()
     if (debug > 1)
         printf("check_parameters: start\n");
 
+    in_file = NULL;
     par_file = fopen(TZ_CONVERT_PAR_FILE_LOC, "r");
     if (par_file != NULL) { /* does exist and no error */
         if (stat(TZ_CONVERT_PAR_FILE_LOC, &par_file_stat) == -1) {
@@ -618,6 +619,7 @@ static int check_parameters()
                 printf("check_parameters: error reading (%s)\n"
                         , TZ_CONVERT_PAR_FILE_LOC);
                 free(in_file);
+                in_file = NULL;
                 fclose(par_file);
             }
             else { 
@@ -882,9 +884,6 @@ orage_timezone_array get_orage_timezones(int show_details, int ical)
         tz_array.next_utc_offset = (int *)malloc(sizeof(int)*(tz_array_size+2));
         tz_array.country = (char **)malloc(sizeof(char *)*(tz_array_size+2));
         tz_array.cc = (char **)malloc(sizeof(char *)*(tz_array_size+2));
-    /* nftw goes through the whole file structure and calls "file_call"
-     * with each file. It returns 0 when everything has been done and -1
-     * if it run into an error. */
         check_parameters();
         if (debug > 0)
             printf("Processing %s files\n", in_file);
@@ -899,6 +898,9 @@ orage_timezone_array get_orage_timezones(int show_details, int ical)
             read_ical_timezones();
 #endif
         }
+    /* nftw goes through the whole file structure and calls "file_call"
+     * with each file. It returns 0 when everything has been done and -1
+     * if it run into an error. */
         if (nftw(in_file, file_call, 10, FTW_PHYS | FTW_ACTIONRETVAL) == -1) {
             perror("nftw error in file handling");
             exit(EXIT_FAILURE);
diff --git a/panel-plugin/tz_zoneinfo_read.c b/panel-plugin/tz_zoneinfo_read.c
index d7cd2fb..d029177 100644
--- a/panel-plugin/tz_zoneinfo_read.c
+++ b/panel-plugin/tz_zoneinfo_read.c
@@ -603,6 +603,7 @@ static int check_parameters()
     if (debug > 1)
         printf("check_parameters: start\n");
 
+    in_file = NULL;
     par_file = fopen(TZ_CONVERT_PAR_FILE_LOC, "r");
     if (par_file != NULL) { /* does exist and no error */
         if (stat(TZ_CONVERT_PAR_FILE_LOC, &par_file_stat) == -1) {
@@ -618,6 +619,7 @@ static int check_parameters()
                 printf("check_parameters: error reading (%s)\n"
                         , TZ_CONVERT_PAR_FILE_LOC);
                 free(in_file);
+                in_file = NULL;
                 fclose(par_file);
             }
             else { 
@@ -882,9 +884,6 @@ orage_timezone_array get_orage_timezones(int show_details, int ical)
         tz_array.next_utc_offset = (int *)malloc(sizeof(int)*(tz_array_size+2));
         tz_array.country = (char **)malloc(sizeof(char *)*(tz_array_size+2));
         tz_array.cc = (char **)malloc(sizeof(char *)*(tz_array_size+2));
-    /* nftw goes through the whole file structure and calls "file_call"
-     * with each file. It returns 0 when everything has been done and -1
-     * if it run into an error. */
         check_parameters();
         if (debug > 0)
             printf("Processing %s files\n", in_file);
@@ -899,6 +898,9 @@ orage_timezone_array get_orage_timezones(int show_details, int ical)
             read_ical_timezones();
 #endif
         }
+    /* nftw goes through the whole file structure and calls "file_call"
+     * with each file. It returns 0 when everything has been done and -1
+     * if it run into an error. */
         if (nftw(in_file, file_call, 10, FTW_PHYS | FTW_ACTIONRETVAL) == -1) {
             perror("nftw error in file handling");
             exit(EXIT_FAILURE);
diff --git a/src/tz_zoneinfo_read.c b/src/tz_zoneinfo_read.c
index d7cd2fb..d029177 100644
--- a/src/tz_zoneinfo_read.c
+++ b/src/tz_zoneinfo_read.c
@@ -603,6 +603,7 @@ static int check_parameters()
     if (debug > 1)
         printf("check_parameters: start\n");
 
+    in_file = NULL;
     par_file = fopen(TZ_CONVERT_PAR_FILE_LOC, "r");
     if (par_file != NULL) { /* does exist and no error */
         if (stat(TZ_CONVERT_PAR_FILE_LOC, &par_file_stat) == -1) {
@@ -618,6 +619,7 @@ static int check_parameters()
                 printf("check_parameters: error reading (%s)\n"
                         , TZ_CONVERT_PAR_FILE_LOC);
                 free(in_file);
+                in_file = NULL;
                 fclose(par_file);
             }
             else { 
@@ -882,9 +884,6 @@ orage_timezone_array get_orage_timezones(int show_details, int ical)
         tz_array.next_utc_offset = (int *)malloc(sizeof(int)*(tz_array_size+2));
         tz_array.country = (char **)malloc(sizeof(char *)*(tz_array_size+2));
         tz_array.cc = (char **)malloc(sizeof(char *)*(tz_array_size+2));
-    /* nftw goes through the whole file structure and calls "file_call"
-     * with each file. It returns 0 when everything has been done and -1
-     * if it run into an error. */
         check_parameters();
         if (debug > 0)
             printf("Processing %s files\n", in_file);
@@ -899,6 +898,9 @@ orage_timezone_array get_orage_timezones(int show_details, int ical)
             read_ical_timezones();
 #endif
         }
+    /* nftw goes through the whole file structure and calls "file_call"
+     * with each file. It returns 0 when everything has been done and -1
+     * if it run into an error. */
         if (nftw(in_file, file_call, 10, FTW_PHYS | FTW_ACTIONRETVAL) == -1) {
             perror("nftw error in file handling");
             exit(EXIT_FAILURE);
--
cgit v0.8.3.4
From f8484189b6a39ab15845baa6fdb31f63e2908b42 Mon Sep 17 00:00:00 2001
From: Juha Kautto <juha@xfce.org>
Date: Thu, 11 Mar 2010 11:13:37 +0000
Subject: 4.5.7.18: Fix for bug 6288: wrong path to libical include files

Fixed <ical.h> to be <libical/ical.h> if os package is being used.
---
diff --git a/src/ical-archive.c b/src/ical-archive.c
index 100be99..7ed3b87 100644
--- a/src/ical-archive.c
+++ b/src/ical-archive.c
@@ -51,8 +51,13 @@
 #include <gtk/gtk.h>
 #include <glib/gprintf.h>
 #include <glib/gstdio.h>
+#ifdef HAVE_LIBICAL
+#include <libical/ical.h>
+#include <libical/icalss.h>
+#else
 #include <ical.h>
 #include <icalss.h>
+#endif
 
 #include "orage-i18n.h"
 #include "functions.h"
diff --git a/src/ical-code.c b/src/ical-code.c
index 6f058ac..f9c8275 100644
--- a/src/ical-code.c
+++ b/src/ical-code.c
@@ -51,8 +51,13 @@
 #include <gtk/gtk.h>
 #include <glib/gprintf.h>
 #include <glib/gstdio.h>
+#ifdef HAVE_LIBICAL
+#include <libical/ical.h>
+#include <libical/icalss.h>
+#else
 #include <ical.h>
 #include <icalss.h>
+#endif
 
 #include "orage-i18n.h"
 #include "functions.h"
diff --git a/src/ical-expimp.c b/src/ical-expimp.c
index 9bda162..73e23c3 100644
--- a/src/ical-expimp.c
+++ b/src/ical-expimp.c
@@ -51,8 +51,13 @@
 #include <gtk/gtk.h>
 #include <glib/gprintf.h>
 #include <glib/gstdio.h>
+#ifdef HAVE_LIBICAL
+#include <libical/ical.h>
+#include <libical/icalss.h>
+#else
 #include <ical.h>
 #include <icalss.h>
+#endif
 
 #include "orage-i18n.h"
 #include "functions.h"
--
cgit v0.8.3.4
From 5ee670e686d7a6d724146b25c546afc617ee9275 Mon Sep 17 00:00:00 2001
From: Juha Kautto <juha@xfce.org>
Date: Sat, 13 Mar 2010 11:29:51 +0000
Subject: 4.7.5.19: Added check for libpopt (bug 6287)

Now checking libpopt and compiling tz_convert only if it is available.
tz_convert is not needed if using systems libical and is not mandatory
even if using local libical, so it is safe to leave it out.
---
diff --git a/configure.in.in b/configure.in.in
index 1e89f5c..20af4ca 100644
--- a/configure.in.in
+++ b/configure.in.in
@@ -232,6 +232,14 @@ XDT_CHECK_OPTIONAL_PACKAGE([NOTIFY], [libnotify],
                            [notify_minimum_version], [libnotify],
                            [LIBNOTIFY support])
 
+dnl **************************************
+dnl *** Check support for libpopt      ***
+dnl **************************************
+AC_CHECK_LIB([popt], [poptGetContext], 
+        [have_popt="yes"
+         AC_DEFINE([HAVE_LIBPOTPT], [1], [Define if we have popt])
+        ])
+AM_CONDITIONAL([HAVE_LIBPOTPT], [test x"$have_popt" = x"yes"])
 
 dnl ************************************************
 dnl *** Optional support for automatic archiving ***
@@ -308,4 +316,9 @@ else
 echo "* LIBICAL support:           Orage local"
 fi
 echo "* Automatic archiving:       $have_archive"
+if test x"$have_popt" = x"yes"; then
+echo "* libpopt available:         building tz_convert"
+else
+echo "* libpopt not available:     not building tz_convert"
+fi
 echo
diff --git a/tz_convert/Makefile.am b/tz_convert/Makefile.am
index a71dd5b..ebb4613 100644
--- a/tz_convert/Makefile.am
+++ b/tz_convert/Makefile.am
@@ -1,4 +1,6 @@
+if HAVE_LIBPOTPT
 bin_PROGRAMS = tz_convert
+endif
 
 man_MANS =                             		 \
 	tz_convert.1
--
cgit v0.8.3.4
From e36ba8cccc3aad3c48c611afb9901a50f4f0d5ed Mon Sep 17 00:00:00 2001
From: Juha Kautto <juha@xfce.org>
Date: Sun, 14 Mar 2010 12:40:28 +0000
Subject: 4.5.7.20: minor fixes to hide show functionality for both Orage and Globatime

Fixed some special cases where windows were not visible as expected.
---
diff --git a/globaltime/globaltime.c b/globaltime/globaltime.c
index 1c5377a..e731185 100644
--- a/globaltime/globaltime.c
+++ b/globaltime/globaltime.c
@@ -106,7 +106,7 @@ static gboolean global_time_active_already(GdkAtom *atom)
         return(FALSE); 
 }
 
-static void show_globaltime()
+static void raise_window()
 {
     GdkWindow *window;
 
@@ -116,6 +116,7 @@ static void show_globaltime()
     window = GTK_WIDGET(clocks.window)->window;
     gdk_x11_window_set_user_time(window, gdk_x11_get_server_time(window));
     gtk_widget_show(clocks.window);
+    gtk_window_present(GTK_WINDOW(clocks.window));
 }
 
 static gboolean client_message_received(GtkWidget *widget
@@ -123,9 +124,7 @@ static gboolean client_message_received(GtkWidget *widget
 {
     if (event->message_type == 
             gdk_atom_intern("_XFCE_GLOBALTIME_RAISE", FALSE)) {
-        /* we need to hide it first since minimized windows are visible ! */
-        gtk_widget_hide(clocks.window); 
-        show_globaltime();
+        raise_window();
         return(TRUE);
     }
     else if (event->message_type ==
@@ -134,7 +133,7 @@ static gboolean client_message_received(GtkWidget *widget
             gtk_widget_hide(clocks.window);
             return(TRUE);
         }
-        show_globaltime();
+        raise_window();
         return(TRUE);
     }
                                                                                 
diff --git a/src/main.c b/src/main.c
index 2ca50dd..c7cb46b 100644
--- a/src/main.c
+++ b/src/main.c
@@ -107,9 +107,9 @@ static void raise_window()
 
     /*
     screen = xfce_gdk_display_locate_monitor_with_pointer(NULL, NULL);
-    */
     gtk_window_set_screen(GTK_WINDOW(cal->mWindow)
             , screen ? screen : gdk_screen_get_default());
+    */
     if (g_par.pos_x || g_par.pos_y)
         gtk_window_move(GTK_WINDOW(cal->mWindow)
                 , g_par.pos_x, g_par.pos_y);
@@ -121,6 +121,7 @@ static void raise_window()
             , g_par.set_ontop);
     window = GTK_WIDGET(cal->mWindow)->window;
     gdk_x11_window_set_user_time(window, gdk_x11_get_server_time(window));
+    gtk_widget_show(cal->mWindow);
     gtk_window_present(GTK_WINDOW(cal->mWindow));
 }
 
@@ -132,27 +133,27 @@ static gboolean client_message_received(GtkWidget *widget
     if (event->message_type ==
             gdk_atom_intern("_XFCE_CALENDAR_RAISE", FALSE)) {
         raise_window();
-        return TRUE;
+        return(TRUE);
     }
     else if (event->message_type ==
             gdk_atom_intern("_XFCE_CALENDAR_TOGGLE_HERE", FALSE)) {
         if (GTK_WIDGET_VISIBLE(cal->mWindow)) {
             write_parameters();
             gtk_widget_hide(cal->mWindow);
-            return TRUE;
+            return(TRUE);
         }
         else {
             raise_window();
-            return TRUE;
+            return(TRUE);
         }
     }
     else if (event->message_type ==
             gdk_atom_intern("_XFCE_CALENDAR_PREFERENCES", FALSE)) {
         show_parameters();
-        return TRUE;
+        return(TRUE);
     }
 
-    return FALSE;
+    return(FALSE);
 }
 
 gboolean keep_tidy(void)
@@ -162,7 +163,7 @@ gboolean keep_tidy(void)
        calendar file smaller and faster */
     xfical_archive();
 #endif
-    return TRUE;
+    return(TRUE);
 }
 
 /*
--
cgit v0.8.3.4
