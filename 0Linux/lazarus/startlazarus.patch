--- ide/lazarusmanager.pas	2012-07-05 17:22:18.000000000 +0200
+++ ide/lazarusmanager.pas	2012-12-02 14:51:48.000000000 +0100
@@ -141,23 +141,23 @@
   BackupFilename: String;
   CurFilename: String;
 begin
-  NewFilename:=AppendPathDelim(Directory)+'lazarus.new'+GetExeExt;
-  BackupFilename:=AppendPathDelim(Directory)+'lazarus.old'+GetExeExt;
-  CurFilename:=AppendPathDelim(Directory)+'lazarus'+GetExeExt;
+  NewFilename:=AppendPathDelim(Directory)+GetBaseLazarusExeName+'.new'+GetExeExt;
+  BackupFilename:=AppendPathDelim(Directory)+GetBaseLazarusExeName+'.old'+GetExeExt;
+  CurFilename:=AppendPathDelim(Directory)+GetBaseLazarusExeName+GetExeExt;
   if FileExistsUTF8(NewFileName) then
   begin
     if FileExistsUTF8(CurFilename) then
     begin
       if FileExistsUTF8(BackupFileName) then
         if not DeleteFileUTF8(BackupFileName) then begin
-          MessageDlg(format('Can''t delete "%s"'#13'%s',
+          MessageDlg(format('Can''t delete "%s"'+LineEnding+'%s',
             [BackupFileName, SysErrorMessageUTF8(GetLastOSError)]),
             mtError, [mbOK], 0);
           Result := mrAbort;
           exit;
         end;
       if not FileProcs.RenameFileUTF8(CurFilename, BackupFileName) then begin
-        MessageDlg(format('Can''t rename "%s" to "%s"'#13'%s',
+        MessageDlg(format('Can''t rename "%s" to "%s"'+LineEnding+'%s',
           [CurFilename, BackupFileName, SysErrorMessageUTF8(GetLastOSError)]),
           mtError, [mbOK], 0);
         Result := mrAbort;
@@ -166,7 +166,7 @@
       InvalidateFileStateCache;
     end;
     if not FileProcs.RenameFileUTF8(NewFileName, CurFilename) then begin
-      MessageDlg(format('Can''t rename "%s" to "%s"'#13'%s',
+      MessageDlg(format('Can''t rename "%s" to "%s"'+LineEnding+'%s',
         [NewFileName, CurFilename, SysErrorMessageUTF8(GetLastOSError)]),
         mtError, [mbOK], 0);
       Result := mrAbort;
@@ -293,8 +293,10 @@
     if (RenameLazarusExecutable(DefaultDir)=mrOK)
       and (RenameLazarusExecutable(CustomDir)=mrOK) then
     begin
-      DefaultExe:=DefaultDir+'lazarus'+GetExeExt;
-      CustomExe:=CustomDir+'lazarus'+GetExeExt;
+      DefaultExe:=DefaultDir+GetBaseLazarusExeName+GetExeExt;
+      CustomExe:=CustomDir+GetBaseLazarusExeName+GetExeExt;
+      debugln('Lazarus default exe is: ' + DefaultDir+GetBaseLazarusExeName+GetExeExt);
+      debugln('Lazarus custom exe is: ' + CustomDir+GetBaseLazarusExeName+GetExeExt);
       if FileExistsUTF8(DefaultExe) then begin
         if FileExistsUTF8(CustomExe) then begin
           // both exist
@@ -306,15 +308,15 @@
             // the custom exe is older => let user choose
             MsgResult:=QuestionDlg{NOTE: Do not use IDEQuestionDialog!!!}(
               'Multiple lazarus found',
-              'Which Lazarus should be started?'#13
-              +#13
-              +'The system default executable'#13
-              +DefaultExe+#13
-              +'(date: '+DateTimeToStr(FileDateToDateTimeDef(FileAgeUTF8(DefaultExe)))+')'#13
-              +#13
-              +'Or your custom executable'#13
-              +CustomExe+#13
-              +'(date: '+DateTimeToStr(FileDateToDateTimeDef(FileAgeUTF8(CustomExe)))+')'#13
+              'Which Lazarus should be started?'+LineEnding
+              +LineEnding
+              +'The system default executable'+LineEnding
+              +DefaultExe+LineEnding
+              +'(date: '+DateTimeToStr(FileDateToDateTimeDef(FileAgeUTF8(DefaultExe)))+')'+LineEnding
+              +LineEnding
+              +'Or your custom executable'+LineEnding
+              +CustomExe+LineEnding
+              +'(date: '+DateTimeToStr(FileDateToDateTimeDef(FileAgeUTF8(CustomExe)))+')'+LineEnding
               ,mtConfirmation,
               [mrYes,'Start system default',mrNo,'Start my custom',mrAbort],'');
             case MsgResult of
@@ -332,8 +334,8 @@
           // only the custom exists => warn user
           MessageDlg('System default is missing',
             'The system default lazarus executable "'+DefaultExe+'" is missing, but your custom'
-            +'executable is still there:'#13
-            +CustomExe+#13
+            +'executable is still there:'+LineEnding
+            +CustomExe+LineEnding
             +'This will be started ...'
             ,mtInformation,[mbOk],0);
           FLazarusPath:=CustomExe;
--- ide/lazconf.pp	2012-08-21 19:45:59.000000000 +0200
+++ ide/lazconf.pp	2012-12-02 14:55:03.000000000 +0100
@@ -135,6 +135,12 @@
 procedure AddFilenameToList(List: TStrings; const Filename: string;
   SkipEmpty: boolean = true);
 
+type
+  TDesktopEnv = (deUnknow, deGnome, deKDE, deMacOSX, deWindows);
+
+function GetDesktopEnv: TDesktopEnv;
+function GetBaseLazarusExeName: string;
+
 const
   EmptyLine = LineEnding + LineEnding;
   EndOfLine: shortstring = LineEnding;
@@ -159,6 +165,40 @@
 
 {$I lazconf.inc}
 
+function GetDesktopEnv: TDesktopEnv;
+begin
+  Result := deUnknow; //unrecognized desktop environment
+  {$IFDEF MSWINDOWS}
+    Result := deWindows;
+  {$ENDIF}
+  {$IFDEF DARWIN}
+    Result := deMacOSX;
+  {$ENDIF}
+  //if this Gnome specific env variable is set, probably the user is running Gnome
+  if GetEnvironmentVariable('GNOME_DESKTOP_SESSION_ID') <> '' then
+    Result := deGnome;
+  //if this KDE specific env variable is set, probably the user is running KDE
+  if GetEnvironmentVariable('KDE_FULL_SESSION') <> '' then
+    Result := deKDE;
+  //if gnome or kde is explicitely declared in DESKTOP_SESSION env variable,
+  //override previously assumed result
+  if GetEnvironmentVariable('DESKTOP_SESSION') = 'gnome' then
+    Result := deGnome
+  else
+    if Pos('kde', Getenvironmentvariable('DESKTOP_SESSION')) <> 0 then
+      Result := deKDE;
+end;
+
+function GetBaseLazarusExeName: string;
+begin
+  Result:='lazarus';
+  if GetDesktopEnv = deKDE then
+    Result:='lazarus-qt'
+  else
+    if (GetDesktopEnv = deUnknow) or (GetDesktopEnv = deGnome) then
+      Result:='lazarus-gtk';
+end;
+
 procedure AddFilenameToList(List: TStrings; const Filename: string;
   SkipEmpty: boolean);
 var
@@ -172,7 +212,7 @@
 
 function GetLazarusApplicationName: string;
 begin
-  Result := 'lazarus';
+  Result := GetBaseLazarusExeName;
 end;
 
 procedure LazConfSubstituteMacros(var s: string);
@@ -350,6 +390,7 @@
   SecondaryFilename:=AppendPathDelim(GetSecondaryConfigPath)+ShortFilename;
   if (not FileExistsUTF8(PrimaryFilename))
   and (FileExistsUTF8(SecondaryFilename)) then begin
+    debugln(['CopySecondaryConfigFile ',SecondaryFilename,' -> ',PrimaryFilename]);
     if not CreatePrimaryConfigPath then begin
       debugln(['WARNING: unable to create primary config directory "',GetPrimaryConfigPath,'"']);
       exit;
