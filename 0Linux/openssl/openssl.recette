#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

NAMESRC=${NAMESRC:-openssl}
VERSION=${VERSION:-1.0.1f}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-openssl}
WGET=${WGET:-http://www.openssl.org/source/$NAMESRC-$VERSION.$EXT}
DESC="Bibliothèques OpenSSL"

. /usr/share/0outils/fonctions_paquets.sh

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags


# On corrige la syntaxe de la doc avec les plus récents 'perl' :
cat $CWD/openssl.pod-syntax.patch | patch -p1

# On corrige la parallélisation :
cat $CWD/openssl.parallel-build.patch | patch -p1

# La code généré change selon l'architecture visée :
if [ "${PKGARCH}" = "x86_64" ]; then
	TARGETOPT="linux-x86_64"
else
	TARGETOPT="linux-elf"
fi

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./Configure \
	${TARGETOPT} \
	--prefix=/usr \
	--libdir=lib${LIBDIRSUFFIX} \
	--openssldir=/etc/ssl \
	enable-camellia \
	enable-idea \
	enable-mdc2 \
	enable-tlsext \
	shared \
	threads \
	zlib-dynamic

# On nettoie tous les drapeaux spécifiés en dur :
	OPENSSLCFLAG=$(grep ^CFLAG= Makefile | LC_ALL=C sed \
	-e 's:^CFLAG=::' \
	-e 's:-fomit-frame-pointer ::g' \
	-e 's:-O[0-9] ::g' \
	-e 's:-march=[-a-z0-9]* ::g' \
	-e 's:-mcpu=[-a-z0-9]* ::g' \
	-e 's:-m[a-z0-9]* ::g' \
	)


sed -i -e "/^CFLAG/s|=.*|=${OPENSSLCFLAG} ${FLAGS}|" \
	-e "/^SHARED_LDFLAGS=/s|$| ${LDFLAGS}|" \
	Makefile

# On force à montrer les actions des scripts pour notre journal :
sed -i '/^SET_X/s:=.*:=set -ex:' Makefile.shared

make depend
make -j${JOBS} || make
fakeroot make install MANDIR=/usr/man INSTALL_PREFIX=${PKG}

# On veille à ne pas écraser la configuration en place :
mv ${PKG}/etc/ssl/openssl.cnf ${PKG}/etc/ssl/openssl.cnf.0nouveau

# On copie les certificats d'exemple :
cp -ar certs ${PKG}/etc/ssl

installer_doc
creer_post_installation
stripper
empaqueter

# C'est fini.
