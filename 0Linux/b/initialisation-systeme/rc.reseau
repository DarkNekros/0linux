#!/usr/bin/env bash
# Script de lancement/arrêt/redémarrage de l'ensemble du réseau.

# On lit les paramètres réseau :
. /etc/0linux/reseau

lancer_reseau() {
	# On active la boucle locale « loopback ». Si le réseau est disponible :
	if [ ! "$(grep lo: /proc/net/dev)" = "" ]; then
		
		# Si l'interface loopback n'est pas active, on réveille 'lo' :
		if [ "$(ifconfig | grep -E 'Local Loopback|Boucle locale')" = "" ]; then
			echo -e "[ \033[${ANSI_COLOR}m$(basename $0)\033[0;0m ] Démarrage de l'interface réseau 'lo'..."
			ifconfig lo 127.0.0.1
			route add -net 127.0.0.0 netmask 255.0.0.0 lo
		fi
	fi

	# Si un routeur/passerelle spécifique a été configuré :
	if [ "$(route -n | grep \"^0.0.0.0\")" = "" ]; then
		if [ ! "${PASSERELLE}" = "" ]; then
			route add default gw ${PASSERELLE} metric 1
		fi
	fi
	
	# Pour chaque interface Ethernet configurée :
	for i in 0 1 2 3; do
		
		# On neutralise toute variable positionnée :
		unset OPTIONH OPTIONS
		
		# Si et seulement si l'interface est présente :
		if [ ! "$(grep eth${i}: /proc/net/dev)" = "" ]; then
			
			# Si l'interface Ethernet concernée n'est pas active, on la réveille :
			if [ "$(ifconfig | grep 'inet addr')" = "" ]; then
				echo -e "[ \033[${ANSI_COLOR}m$(basename $0)\033[0;0m ] Démarrage de l'interface réseau 'eth${i}'..."
				ifconfig eth${i}
				route add -net 127.0.0.0 netmask 255.0.0.0 lo
				fi
			
			# Si l'IP, le masque et la passerelle sont configurés, on se connecte en statique :
			if [ ! "${PASSERELLE}" = "" -a ! "${IP[${i}]}" = "" -a ! "${SOUSRESEAU[${i}]}" = "" ]; then
				
				# On utilise 'ipmask' pour définir l'adresse à envoyer en « broadcast » :
				BROADCAST[${i}]="$(ipmask ${SOUSRESEAU[${i}]} ${IP[${i}]} | cut -d' ' -f1)"
				
				# On envoie le tout à 'ifconfig' :
				ifconfig eth${i} ${IP[${i}]} broadcast ${BROADCAST[${i}]} netmask ${SOUSRESEAU[${i}]}
			
			# Sinon, on suppose qu'on doit utiliser DHCP. On récupère les options à passer : :
			else
				if [ ! "${HOTEDHCP[${i}]}" = "" ]; then
					OPTIONH="-h ${HOTEDHCP[${i}]}"
				fi
				if [ ! "${IP[${i}]}" = "" ]; then
					OPTIONS="-s ${IP[${i}]}"
				fi
				
				# On demande une IP :
				dhcpcd ${OPTIONH} ${OPTIONS} eth${i}
			fi
		fi
	done
}

stopper_reseau() {
	# On stoppe le routage de la passerelle s'il y en a une :
	if [ ! "${PASSERELLE}" = "" ]; then
		if [ ! "$(route -n | grep \"^0.0.0.0\")" = "" ]; then
			route del default
		fi
	fi
	
	# Pour chaque interface Ethernet :
	for i in 0 1 2 3; do
		
		# Si et seulement si l'interface est présente :
		if [ ! "$(grep eth${i}: /proc/net/dev)" = "" ]; then
			
			# Si l'interface Ethernet concernée est active, on la stoppe :
			if [ ! "$(ifconfig eth${i} | grep 'inet addr')" = "" ]; then
				echo -e "[ \033[${ANSI_COLOR}m$(basename $0)\033[0;0m ] Arrêt de l'interface réseau 'eth${i}'..."
				dhcpcd -k -d eth${1} 2> /dev/null || ifconfig eth${i} down
			fi
		fi
	done
}

case "$1" in
	'start')
		lancer_reseau
	;;
	'stop')
		stopper_reseau
	;;
	'restart')
		stopper_reseau
		sleep 1
		lancer_reseau
	;;
	*)
		echo "Utilisation : $0 start|stop|restart"
esac
