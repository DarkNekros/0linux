#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

NAMESRC=${NAMESRC:-gtk+}
VERSION=${VERSION:-3.10.2}
EXT=${EXT:-tar.xz}
NAMETGZ=${NAMETGZ:-gtk+}
WGET=(http://ftp.acc.umu.se/pub/gnome/sources/$NAMESRC/2.24/$NAMESRC-2.24.20.$EXT
      http://ftp.acc.umu.se/pub/gnome/sources/$NAMESRC/$(echo $VERSION | cut -d'.' -f1-2)/$NAMESRC-$VERSION.$EXT
     )
DESC="Suite d'outils pour la création d'interfaces graphiques"

. /usr/share/0outils/fonctions_paquets.sh

telecharger_sources
cflags

# On compile GTK+ 2 :
preparer_sources $NAMESRC-2.24.20.$EXT

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# On corrige la génération de la doc, boguée avec nos 'docbook*' :
	sed -i 's#l \(gtk-.*\).sgml#& -o \1#' docs/{faq,tutorial}/Makefile.in
	
	# Ainsi que quelques manuels manquants :
	sed -i 's#.*@man_#man_#' docs/reference/gtk/Makefile.in
	
	# On supprime ce message inquiétant et inutile :
	sed -i -e '/if (g_hash_table_lookup (display_x11->xid_ht, xid))/d' \
		-e '/g_warning ("XID collision, trouble ahead");/d' \
		gdk/x11/gdkxid.c
	
	# Compilation pour i686 :
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
		--with-xinput=yes \
		--build=${PKGARCH}-0linux-linux-gnu
	
	make -j${JOBS} || make
	fakeroot make install DESTDIR=${PKG}
	
	# On renomme ce binaire spécifique à l'architecture pour l'envelopper :
	mv ${PKG}/usr/bin/gtk-query-immodules-2.0{,-32}
	
	# On renomme la configuration :
	mv ${PKG}/etc/gtk-2.0{,-32}
fi

# On refait la préparation des sources, il peut rester des déchets de la
# compilation en 32 bits (et make 'distclean' ne fonctionne pas toujours) :
preparer_sources $NAMESRC-2.24.20.$EXT
cflags

# On corrige la génération de la doc, boguée avec nos 'docbook*' :
sed -i 's#l \(gtk-.*\).sgml#& -o \1#' docs/{faq,tutorial}/Makefile.in

# Ainsi que quelques manuels manquants :
sed -i 's#.*@man_#man_#' docs/reference/gtk/Makefile.in

# On supprime ce message inquiétant et inutile :
sed -i -e '/if (g_hash_table_lookup (display_x11->xid_ht, xid))/d' \
	-e '/g_warning ("XID collision, trouble ahead");/d' \
	gdk/x11/gdkxid.c

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--enable-introspection \
	--with-xinput=yes \
	--build=${PKGARCH}-0linux-linux-gnu

make -j${JOBS} || make
fakeroot make install DESTDIR=${PKG}

if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On renomme la configuration :
	mv ${PKG}/etc/gtk-2.0{,-64}
	
	# On crée un lien générique pour la configuration :
	ln -sf gtk-2.0-64 ${PKG}/etc/gtk-2.0
	
	# On renomme ce binaire spécifique à l'architecture pour l'envelopper :
	mv ${PKG}/usr/bin/gtk-query-immodules-2.0{,-64}
	
	# on lie un binaire générique au programme enveloppe :
	ln -sf enveloppe_multiarch ${PKG}/usr/bin/gtk-query-immodules-2.0
fi

# On affecte un thème par défaut sans écraser quoi que ce soit :
echo 'gtk-theme-name="GTK+"' > ${PKG}/etc/gtk-2.0/gtkrc.0nouveau

# On place la doc dans un sous-répertoire dédié :
installer_doc ${NAMETGZ}-${VERSION}/${NAMETGZ}-2.24.20

# On compile GTK+ 3 :
preparer_sources
cflags

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--disable-schemas-compile \
	--enable-xkb \
	--build=${PKGARCH}-0linux-linux-gnu

make -j${JOBS} || make
fakeroot make install DESTDIR=${PKG}

# On affecte un thème par défaut sans écraser quoi que ce soit :
echo 'gtk-theme-name="GTK+"' > ${PKG}/etc/gtk-3.0/gtkrc.0nouveau

# On spécifie un thème d'icône par défaut :
cat > ${PKG}/etc/gtk-3.0/settings.ini << "EOF"
[Settings]
gtk-theme-name = Adwaita
gtk-fallback-icon-theme = gnome

EOF

# On crée un fichier service pour pour mettre à jour les modules GTK+ :
mkdir -p ${PKG}/etc/rc.d
cat > ${PKG}/etc/rc.d/rc.gtk+ << "EOF"
#!/usr/bin/env bash

gtk_start() {
	# Prise en charge du multilib pour x86_64 :
	if [ "$(uname -m)" = "x86_64" ]; then
		if [ ! -r etc/gtk-2.0-32/gtk.immodules ]; then
			echo "Mise à jour des modules GTK+ 2 32 bits..."
			gtk-query-immodules-2.0-32 > /etc/gtk-2.0-32/gtk.immodules
		fi
		if [ ! -r etc/gtk-2.0-64/gtk.immodules ]; then
			echo "Mise à jour des modules GTK+ 2 64 bits..."
			gtk-query-immodules-2.0-64 > /etc/gtk-2.0-64/gtk.immodules
		fi
		if [ ! -r etc/gtk-3.0/gtk.immodules ]; then
			echo "Mise à jour des modules GTK+ 3..."
			gtk-query-immodules-3.0 > /etc/gtk-3.0/gtk.immodules
		fi
	else
		if [ ! -r etc/gtk-2.0/gtk.immodules ]; then
			echo "Mise à jour des modules GTK+ 2..."
			gtk-query-immodules-2.0 > /etc/gtk-2.0/gtk.immodules
		fi
		if [ ! -r etc/gtk-3.0/gtk.immodules ]; then
			echo "Mise à jour des modules GTK+ 3..."
			gtk-query-immodules-3.0 > /etc/gtk-3.0/gtk.immodules
		fi
	fi
}

case "$1" in
	'start')
		gtk_start
	;;
	
	'stop')
		# On ne fait rien
	;;
	
	'restart')
		gtk_start
	;;
	
	*)
		echo "Utilisation : $0 start|stop|restart"
esac

EOF
chmod +x ${PKG}/etc/rc.d/rc.gtk+

installer_doc
creer_post_installation

# On complète la post-installation :
cat >> ${PKG}/post-install.sh << "EOF"

# On nettoie le cache et on régénère les modules GTK+ :
if [ "$(uname -m)" = "x86_64" ]; then
	chroot . gtk-query-immodules-2.0-32 > /etc/gtk-2.0-32/gtk.immodules 2>/dev/null
	chroot . gtk-query-immodules-2.0-64 > /etc/gtk-2.0-64/gtk.immodules 2>/dev/null
	chroot . gtk-query-immodules-3.0 > /etc/gtk-3.0/gtk.immodules 2>/dev/null
else
	chroot . gtk-query-immodules-2.0 > /etc/gtk-2.0/gtk.immodules 2>/dev/null
	chroot . gtk-query-immodules-3.0 > /etc/gtk-3.0/gtk.immodules 2>/dev/null
fi

EOF

stripper
empaqueter

# C'est fini.
