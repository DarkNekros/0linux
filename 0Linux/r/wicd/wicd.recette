#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

VERSION=1.7.2.4
WGET=https://launchpad.net/$NAMESRC/$(echo $VERSION | cut -d'.' -f1-2)/$VERSION/+download/$NAMESRC-$VERSION.tar.gz
DESC="Gestionnaire graphique de connexions réseau"
EXTRADEPS="gksu"

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

sed -i "s@return s\.translate(None, table)@return s\.encode('ascii', 'replace').translate(None, table)@" wicd/misc.py || exit 1

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
python setup.py configure \
	--lib=/usr/lib${LIBDIRSUFFIX}/wicd/ \
	--backends=/usr/lib${LIBDIRSUFFIX}/wicd/backends/ \
	--distro=slackware \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION}/ \
	--kdedir=/usr/share/autostart/ \
	--mandir=/usr/man/

# On blouse le système pour se passer de la dépendance à 'pybabel' :
for fichierpo in $(find po/ -type f -name "*.po") ; do
	mkdir -p translations/$(basename ${fichierpo} .po)/LC_MESSAGES
	msgfmt -o translations/$(basename ${fichierpo} .po)/LC_MESSAGES/wicd.mo ${fichierpo}
done

fakeroot python setup.py install --optimize=1 --root=${PKG}

# On crée le fichier de configuration en affectant d'office le client 'dhcpcd'
# pour la connexion et l'auto-détection pour le 'su' graphique :
cat > ${PKG}/etc/wicd/manager-settings.conf << "EOF"
[Settings]
dhcp_client = 2
sudo_app = 0

EOF

installer_doc
creer_post_installation
stripper
empaqueter

# C'est fini.
