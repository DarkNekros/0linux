#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

NAMESRC=${NAMESRC:-cyrus-sasl}
VERSION=${VERSION:-2.1.25}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-cyrus-sasl}
WGET=${WGET:-http://ftp.andrew.cmu.edu/pub/cyrus-mail/$NAMESRC-$VERSION.$EXT}
DESC="Système d'authentification chiffrée pour la messagerie électronique"

. /usr/share/0outils/fonctions_paquets.sh

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On crée un répertoire manquant :
mkdir -p ${PKG}/var/state/saslauthd

# On adapte la version à détecter de 'berkeley-db' :
sed -i 's@if DB_VERSION_MAJOR == 4.*@if DB_VERSION_MAJOR == 6@g' sasldb/db_berkeley.c
sed -i 's@if DB_VERSION_MAJOR == 4.*@if DB_VERSION_MAJOR == 6@g' utils/dbconverter-2.c

# On force notre répertoire standard pour les bibliothèques :
sed -i "/sasldir/s/lib/&${LIBDIRSUFFIX}/" plugins/Makefile.in

# On crée les répertoires d'accueil :
mkdir -p ${PKG}/var/state/saslauthd

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--disable-anon \
	--enable-compat185 \
	--enable-cxx \
	--enable-login \
	--enable-sql \
	--enable-tcl \
	--with-configdir=/etc/sasl2 \
	--with-gdbm \
	--with-saslauthd \
	--with-tcl=/usr/lib${LIBDIRSUFFIX} \
	--without-ldap \
	--build=${PKGARCH}-0linux-linux-gnu

make -j${JOBS} || make
fakeroot make install DESTDIR=${PKG}

# On corrige cette page de manuel :
rm -rf ${PKG}/usr/man/cat8
cp saslauthd/saslauthd.mdoc ${PKG}/usr/man/man8/saslauthd.8

# On crée le fichier service :
mkdir -p ${PKG}/etc/rc.d
cat > ${PKG}/etc/rc.d/rc.sasl << "EOF"
#!/usr/bin/env bash

sasl_start() {
	echo -e "[ \033[${ANSI_COLOR}m$(basename $0)\033[0;0m ] Démarrage de SASL..."
	saslauthd -a shadow
}

sasl_stop() {
	echo -e "[ \033[${ANSI_COLOR}m$(basename $0)\033[0;0m ] Arrêt de SASL..."
	kill $(cat /var/state/saslauthd/saslauthd.pid 2>/dev/null)
}

case "$1" in
	'start')
		sasl_start
	;;
	
	'stop')
		sasl_stop
	;;
	
	'restart')
		sasl_stop
		sleep 1
		sasl_start
	;;
	
	*)
		echo "Utilisation : $0 start|stop|restart"
		exit 1
	;;

esac

EOF
chmod +x ${PKG}/etc/rc.d/rc.sasl

installer_doc
creer_post_installation
stripper
empaqueter

# C'est fini.
