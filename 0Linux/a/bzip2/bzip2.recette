#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

NAMESRC=bzip2
VERSION=1.0.6
EXT=tar.gz
NAMETGZ=bzip2
WGET=http://www.bzip.org/$VERSION/$NAMESRC-$VERSION.$EXT
DESC="Compresseur de fichiers par blocs"


telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On crée les répertoires d'accueil :
mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}
mkdir -p ${PKG}/usr/{bin,include,man/man1}

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# On crée les répertoires d'accueil :
	mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}
	
	# On force la création de liens symboliques relatifs :
	sed -i -e 's@ln -s -f $(PREFIX)/bin/@ln -s -f @' Makefile
	
	# On force à respecter le suffixe de nos bibliothèques et notre compilateur :
	sed -i "s@/lib\(/\| \|$\)@/usr/lib${LIBDIRSUFFIX}\1@g" $(find . -type f -name "Makefile*")
	sed -i "s@^CFLAGS=.*@CFLAGS=${FLAGS} -O3@g" $(find . -type f -name "Makefile*")
	sed -i "s@^CFLAGS=.*@CFLAGS=${FLAGS} -O3@g" $(find . -type f -name "Makefile*")
	sed -i "s@^CC=.*@CC=${CC}@" $(find . -type f -name "Makefile*")
	
	# Compilation de la bibliothèque partagée :
	make -j${JOBS} -f Makefile-libbz2_so || make -f Makefile-libbz2_so
	make clean
	
	# Compilation de la bibliothèque statique :
	make -j${JOBS} bzip2 bzip2recover libbz2.a || make bzip2 bzip2recover libbz2.a
	
	# On copie et on lie la bibliothèque partagée :
	cp libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/
	ln -sf libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/libbz2.so
	ln -sf libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/libbz2.so.$(echo $VERSION | cut -d'.' -f1)
	ln -sf libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/libbz2.so.$(echo $VERSION | cut -d'.' -f1-2)

	# On copie la bibliothèque statique :
	cp libbz2.a ${PKG}/usr/lib${LIBDIRSUFFIX}/
fi

# On refait la préparation des sources, il peut rester des déchets de la
# compilation en 32 bits (et make 'distclean' ne fonctionne pas toujours) :
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On force la création de liens symboliques relatifs :
sed -i -e 's@ln -s -f $(PREFIX)/bin/@ln -s -f @' Makefile

# On force à respecter le suffixe de nos bibliothèques et notre compilateur :
sed -i "s@/lib\(/\| \|$\)@/usr/lib${LIBDIRSUFFIX}\1@g" $(find . -type f -name "Makefile*")
sed -i "s@^CFLAGS=.*@CFLAGS=${FLAGS} -O3@g" $(find . -type f -name "Makefile*")
sed -i "s@^CFLAGS=.*@CFLAGS=${FLAGS} -O3@g" $(find . -type f -name "Makefile*")
sed -i "s@^CC=.*@CC=${CC}@" $(find . -type f -name "Makefile*")

# Compilation de la bibliothèque partagée :
make -j${JOBS} -f Makefile-libbz2_so || make -f Makefile-libbz2_so
make clean

# Compilation de la bibliothèque statique :
make -j${JOBS} bzip2 bzip2recover libbz2.a || make bzip2 bzip2recover libbz2.a

# 'make install' à la main !
mkdir -p ${PKG}/usr/{bin,lib${LIBDIRSUFFIX},include,man/man1}

# On copie et on lie la bibliothèque partagée :
cp libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/
ln -sf libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/libbz2.so
ln -sf libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/libbz2.so.$(echo $VERSION | cut -d'.' -f1)
ln -sf libbz2.so.${VERSION} ${PKG}/usr/lib${LIBDIRSUFFIX}/libbz2.so.$(echo $VERSION | cut -d'.' -f1-2)

# On copie la bibliothèque statique :
cp libbz2.a ${PKG}/usr/lib${LIBDIRSUFFIX}/

# On copie les binaires :
cp bzip2-shared ${PKG}/usr/bin/bzip2
cp bzip2recover bzdiff bzgrep bzmore ${PKG}/usr/bin/

# On crée quelques liens symboliques :
ln -sf bzdiff ${PKG}/usr/bin/bzcmp
ln -sf bzgrep ${PKG}/usr/bin/bzegrep
ln -sf bzgrep ${PKG}/usr/bin/bzfgrep
ln -sf bzmore ${PKG}/usr/bin/bzless

ln -sf bzip2 ${PKG}/usr/bin/bunzip2
ln -sf bzip2 ${PKG}/usr/bin/bzcat

# On copie les manuels :
cp *.1 ${PKG}/usr/man/man1/

# On fait quelques liens utiles :
ln -sf bzip2.1 ${PKG}/usr/man/man1/bunzip2.1
ln -sf bzip2.1 ${PKG}/usr/man/man1/bzcat.1
ln -sf bzip2.1 ${PKG}/usr/man/man1/bzip2recover.1

# On copie les entêtes :
cp *.h ${PKG}/usr/include/

# On passe les bonnes permissions :
chmod 755 ${PKG}/usr/bin/*
chmod 755 ${PKG}/usr/lib${LIBDIRSUFFIX}/*.so

installer_doc
creer_post_installation
stripper
empaqueter

# C'est fini. C'était pénible !
