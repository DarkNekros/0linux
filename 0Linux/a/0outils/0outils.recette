#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

VERSION=12.8
DESC="Outils « maison » pour l'installation et l'administration du système 0Linux"
EXTRADEPS="realpath"

cflags # on appelle cflags() car elle contient la détection de l'architecture.

# On crée les répertoires d'accueil :
mkdir -p ${PKG}/{etc/{0linux,0outils},usr/share/0outils}
mkdir -p ${PKG}/var/cache/0g
mkdir -p ${PKG}/usr/{s,}bin

# On place les scripts réservés à root :
for script in \
0chroot \
0clavier \
0comparer_config \
0creation_initrd \
0creation_live \
0g \
0horloge \
0locale \
0nouvel_utilisateur \
0police \
0reseau; do
	cp -a $CWD/${script} ${PKG}/usr/sbin/
done
chmod 700 ${PKG}/usr/sbin/*

# On place les script utilisateurs :
cp -a $CWD/0bureau ${PKG}/usr/bin/
cp -a $CWD/0dep ${PKG}/usr/bin/
cp -a $CWD/0ldd_clean ${PKG}/usr/bin/
chmod 755 ${PKG}/usr/bin/*

# On place les fonctions pour l'empaquetage :
cp -a $CWD/fonctions_paquets.sh ${PKG}/usr/share/0outils/
chmod 755 ${PKG}/usr/share/0outils/*.sh

# On place les fichiers du système autonome, scripts et fichiers d'amorçage :
cp -a $CWD/installateur ${PKG}/usr/share/0outils/

# On place les fichiers de création de l'initrd :
cp -a $CWD/initrd ${PKG}/usr/share/0outils/

# On place la configuration de '0g' en prenant garde à ne rien écraser :
cp -a $CWD/0g.conf ${PKG}/etc/0outils/0g.conf.0nouveau

# On place le manuel via 'txt2tags' :
mkdir -p ${PKG}/usr/man/man8
txt2tags -t man -o ${PKG}/usr/man/man8/0g.8 $CWD/0g-man.t2t

# On crée le fichier des drapeaux d'optimisation par défaut :
cat > ${PKG}/etc/0outils/drapeaux.conf << "EOF"
# N'éditez pas ce fichier, il sera écrasé par toute mise à niveau de '0outils'.
# Éditez plutôt l'un des fichiers '/etc/0outils/drapeaux-<architecture>.conf', 
# qui eux conservent vos préférences.

# Les drapeaux d'optimisation globaux par défaut :
export CC="gcc"
export CXX="g++"
FLAGS="-O2 -pipe"
LIBDIRSUFFIX=""
export LDFLAGS="-L/usr/lib${LIBDIRSUFFIX}"
export PKG_CONFIG_PATH=/usr/lib${LIBDIRSUFFIX}/pkgconfig

EOF

cat > ${PKG}/etc/0outils/drapeaux-i686.conf.0nouveau << "EOF"
# Les drapeaux d'optimisation globaux par défaut pour i686 :
export CC="gcc -m32"
export CXX="g++ -m32"
export LDFLAGS="-m32" # Utilisé uniquement en multilib
FLAGS="-m32 -O2 -march=i686 -pipe"
LIBDIRSUFFIX=""
export USE_ARCH=32 # Utilisé uniquement en multilib
export LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -Wl,-O1,--as-needed,--sort-common"
export PKG_CONFIG_PATH=/usr/lib${LIBDIRSUFFIX}/pkgconfig

EOF

cat > ${PKG}/etc/0outils/drapeaux-x86_64.conf.0nouveau << "EOF"
# Les drapeaux d'optimisation globaux par défaut pour x86_64 :
export CC="gcc"
export CXX="g++"
FLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
export USE_ARCH=64 # Utilisé uniquement en multilib
export LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -Wl,-O1,--as-needed,--sort-common"
export PKG_CONFIG_PATH=/usr/lib${LIBDIRSUFFIX}/pkgconfig

EOF

cat > ${PKG}/etc/0outils/drapeaux-arm.conf.0nouveau << "EOF"	
#!/bin/sh

# Les drapeaux d'optimisation globaux par défaut pour ARM (ici v7-a minimum) :
export CC="gcc"
export CXX="g++"
FLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16 -pipe"
LIBDIRSUFFIX=""
export LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -Wl,-O1,--as-needed,--sort-common"
export PKG_CONFIG_PATH=/usr/lib${LIBDIRSUFFIX}/pkgconfig

EOF

installer_doc

# On place le manuel HTML via 'txt2tags' :
txt2tags -t html -o ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/0g.html $CWD/0g-man.t2t

creer_post_installation

# On complète la post-installation en asurant la migration vers le nouveau '0g' :
cat >> ${PKG}/post-install.sh <<"EOF"

# On s'assure qu'il ne reste rien des anciens '0g'. On supprime en deux temps
# car un 'rm -rf' supprimerait le nouveau fichier 'etc/0outils/0g.conf' ;) :
rm -f etc/0outils/0g/*
rmdir etc/0outils/0g/ 2>/dev/null || true

EOF

empaqueter

# C'est fini.
