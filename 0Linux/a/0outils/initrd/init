#!/bin/sh
# Fichier de démarrage du système dans l'initramfs, juste avant le montage
# effectif de la racine système.

# On montera la racine en lecture seule par défaut, sauf si spécifié sur la ligne "boot:" :
RORW="ro"

# Aucune attente par défaut :
WAIT=0

# Pas de shell de secours par défaut :
RESCUE=0

# Si aucune racine n'a été spécifiée, c'est moche, mais on tente de sauver les meubles :
ROOTDEV="/dev/sda1"

# On spécifie un $PATH avant tout, en mettant BusyBox en premier:
PATH=/usr/bin/BusyBox/sbin:/usr/bin/BusyBox/usr/sbin:/usr/bin/BusyBox/bin:/usr/bin/BusyBox/usr/bin:/sbin:/usr/sbin:/bin:/usr/bin

# On installe les liens symboliques de BusyBox aux emplacement standards :
busybox --install -s

# '/dev' est censé être déjà monté en devtmpfs par le noyau.
# On monte les systèmes de fichiers virtuels sur notre système en lecture seule :
mount -n -t proc  proc  /proc

# On analyse la ligne "boot:"
for ARG in $(cat /proc/cmdline); do
	case $ARG in
		0|1|2|3|4|5|6|S|s|single)
			RUNLEVEL=$ARG
		;;
		ro)
			RORW="ro"
		;;
		rw)
			RORW="rw"
		;;
		rescue|maintenance|secours)
			RESCUE=1
		;;
		root=/dev/*)
			ROOTDEV=$(echo $ARG | cut -d'=' -f2)
		;;
		root=LABEL=*)
			ROOTDEV=$(echo $ARG | cut -d'=' -f2-)
		;;
		root=UUID=*)
			ROOTDEV=$(echo $ARG | cut -d'=' -f2-)
		;;
		waitforroot=*|rootdelay=*)
			WAIT=$(echo $ARG | cut -d'=' -f2)
		;;
	esac
done

# Mode débogage :
DEBUGBOOTLINE="$(cat /proc/cmdline | grep '0linuxdebug')"

if [ ! "${DEBUGBOOTLINE}" = "" ]; then
	# Mode lent avec pause entre chaque étape :
	if [ ! "$(echo "${DEBUGBOOTLINE}" | grep '0linuxdebug lent')" = "" ]; then
		set -x
	
	# Mode de débogage normal :
	else
		set -x
		trap "sleep 5" DEBUG
	fi
fi

mount -n -t sysfs sysfs /sys
mount -n -t tmpfs tmpfs /run
mkdir -p /dev/pts
mount -n -t devpts devpts /dev/pts

# On crée les noeuds des périphériques et on lance 'mdev', inclus dans BusyBox,
# pour peupler '/dev' :
mknod /dev/null c 1 3
mknod /dev/tty c 5 0
mknod /dev/zero c 1 5
mknod /dev/ptmx c 5 2
mknod /dev/random c 1 8
mknod /dev/urandom c 1 9
mdev -s

# On applique le délai spécifié sur la ligne de commande pour le montage de la racine :
sleep ${WAIT}

# Si le mode maintenance a été appelé, on lance un shell :
if [ ${RESCUE} -eq 1 ];then
	echo "--- MODE MAINTENANCE ---"
	echo ""
	echo " Vous pouvez reparer votre systeme maintenant."
	echo ""
	echo "Si vous voulez continuer le demarrage normalement apres avoir effectue"
	echo "vos operations de maintenance, montez simplement votre racine (reparee)"
	echo "sous '/mnt' en lecture seule ou en lecture-ecriture et quittez ce shell"
	echo "avec 'exit' ; le systeme sera alors demarre normalement :"
	echo ""
	echo "	mount -o ro partition_racine /mnt # Ou, au choix :"
	echo "	mount -o rw partition_racine /mnt"
	echo ""
	echo " Puis tapez 'exit' quand vous avez termine."
	echo ""
	echo "--- MODE MAINTENANCE ---"
	/bin/sh
else
	
	# On déduit le périphérique de la racine selon ce qui spécifié (label, UUID):
	if [ ! "$(echo ${ROOTDEV} | grep 'LABEL=')" = "" -o ! "$(echo ${ROOTDEV} | grep -q 'UUID=')" = "" ]; then
		
		# Si 'findfs' retourne un code d'erreur, on aboie :
		if ! findfs ${ROOTDEV}; then
			echo "ERREUR FATALE : l'etiquette ou l'identifiant UUID specifie sur la ligne de"
			echo "demarrage ne correspond a aucune de vos partitions !"
			echo ""
			echo "Ligne de demarrage specifiee :"
			cat /proc/cmdline
			echo ""
			echo "Informations sur vos partitions :"
			blkid
			read BLAH;
			shutdown -r now
		else
			ROOTDEV=$(findfs $ROOTDEV)
		fi
	fi
	
	# On monte la vraie racine sur le '/mnt' actuel (en RAM) :
	mount -o ${RORW} ${ROOTDEV} /mnt
fi

# On se déplace sur la nouvelle racine, montée sur '/mnt' :
cd /mnt

# On monte au bon endroit le devtmpfs pour '/dev' :
mount -t devtmpfs none ./dev

# On change de racine et on place l'ancienne racine dans un sous-répertoire de
# la nouvelle racine (notez l'absence de slash devant 'oldroot') :
pivot_root . oldroot 2>/dev/null

# On 'chroot' sur la nouvelle racine et on lance 'init', on peut enfin démarrer.
exec chroot . /sbin/init </dev/console 2>/dev/console 2>&1
