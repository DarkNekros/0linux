#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)
PKGCAT=base
NAMESRC=${NAMESRC:-vim}
VERSION=${VERSION:-7.3} # Penser à indiquer le nombre de correctifs plus bas !
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-vim}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets/$PKGCAT}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}

WGET=${WGET:-ftp://ftp.vim.org/pub/vim/unix/$NAMESRC-$VERSION.$EXT}
DOC="AUTHORS BUGS ?hange?og* *CHANGES* CODING* Contents *COPYING* EXPAT HACKING *INSTALL* *LEGAL* *LICENSE* \
	MAINTAINERS *NEWS* *README* THANKS TODO TRANSLATORS *license* *readme*"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Le puissant éditeur de texte « Vi IMproved »"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On télécharge chaque correctif :
if [ ! "${VIMPATCHES}" = "0" ]; then
	for correctif in {001..353}; do # Indiquer le nombre de correctifs ici.
		if [ ! -r $CWD/patches/$VERSION.${correctif} ]; then
			wget -vc "ftp://ftp.vim.org/pub/vim/patches/$VERSION/$VERSION.${correctif}" \
				-O $CWD/patches/$VERSION.${correctif}.part
			mv $CWD/patches/$VERSION.${correctif}{.part,}
		fi
	done
fi

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On applique un à un les correctifs des mainteneurs :
if [ ! "${VIMPATCHES}" = "0" ]; then
	for correctif in $CWD/patches/*; do
		cat ${correctif} | patch -p0
	done
fi

# On positionne USE_ARCH :
export USE_ARCH=64

# Compilation en 3 temps : 
# 1- Compilation de 'minivim' statique pour le système autonome
# 2- Compilation du 'vim' pour terminal
# 3- Compilation de 'gvim' pour X

# On force l'emplacement de 'vimrc' dans /etc :
echo '#define SYS_VIMRC_FILE "/etc/vimrc"' >> src/feature.h

# 1- Compilation pour 64 bits du 'minivim' minimal sans X :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--disable-gui \
	--enable-multibyte \
	--with-compiledby=0 \
	--with-features=tiny \
	--with-vim-name=minivim \
	--without-x \
	--build=${TARGET64}

make -j3 || make
fakeroot make install VIMRTDIR= DESTDIR=${PKG}

# On nettoie la présente compilation :
make distclean

# 2- Compilation pour 64 bits du 'vim' pour terminal :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--disable-gui \
	--enable-acl \
	--enable-cscope \
	--enable-gpm \
	--enable-pythoninterp \
	--enable-perlinterp \
	--enable-rubyinterp \
	--enable-multibyte \
	--with-compiledby=0 \
	--with-features=huge \
	--without-x \
	--build=${TARGET64}

make -j3 || make
fakeroot make install VIMRTDIR= DESTDIR=${PKG}

# On nettoie la présente compilation :
make distclean

# 3- Compilation pour 64 bits de 'gvim' pour X avec le maximum de fonctionnalités :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--enable-acl \
	--enable-cscope \
	--enable-gpm \
	--enable-gui=gtk2 \
	--enable-pythoninterp \
	--enable-perlinterp \
	--enable-rubyinterp \
	--enable-multibyte \
	--with-compiledby=0 \
	--with-features=huge \
	--with-vim-name=gvim \
	--with-x \
	--build=${TARGET64}

make -j3 || make
fakeroot make install VIMRTDIR= DESTDIR=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On crée un lien pour 'gview' :
ln -sf gvim ${PKG}/usr/bin/gview

# On ajoute le dictionnaire pour le français en encodage UTF-8 :
cp -a $CWD/fr.utf-8.* ${PKG}/usr/share/vim/spell/

# On copie le vimrc à sa place :
cp -a runtime/vimrc_example.vim ${PKG}/usr/share/vim

# Puis on en copie un autre dans /etc pour en faire la configuration globale :
mkdir -p ${PKG}/etc
cp runtime/vimrc_example.vim ${PKG}/etc/vimrc.new

# On y ajoute quelques paramètres personnalisés (compatibilité 'crontab -e', 
# dictionnaires, police brillante, coloration, numérotation des lignes, auto-détection de la souris) :
echo "
\" Options pour 0 :
\" ----------------

filetype plugin on
filetype indent on
set backupskip+=/var/spool/cron/*
set spelllang=fr,en
set spell
set background=dark
set number
syntax enable
" >> ${PKG}/etc/vimrc.new

# On ajoute un lien de 'vi' vers 'vim' :
ln -sf vim ${PKG}/usr/bin/vi

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION} 2>/dev/null || true

# On lie la doc de /usr/share/vim/vim*/doc à /usr/doc/vim-*/doc :
ln -sf ${PKG}/usr/share/vim/vim$(echo ${VERSION} | tr -d ".")/doc ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/usr/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}


if [ -x usr/bin/update-desktop-database ]; then
	chroot . /usr/bin/update-desktop-database &> /dev/null
fi

if [ -x /usr/bin/update-mime-database ]; then
	chroot . /usr/bin/update-mime-database /usr/share/mime >/dev/null 2>&1
fi

if [ -x usr/bin/gtk-update-icon-cache ]; then
	chroot . /usr/bin/gtk-update-icon-cache -f -t /usr/share/icons/hicolor 1>/dev/null 2>&1
fi

config etc/vimrc.new

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spackpkg . $OUT/${NAMETGZ}-${VERSION}-$ARCH-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
