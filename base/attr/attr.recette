#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

NAMESRC=${NAMESRC:-attr}
VERSION=${VERSION:-2.4.43}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-attr}
BUILD=${BUILD:-5}


TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}
PKG_CONFIG_PATH32=${PKG_CONFIG_PATH32:-/usr/lib/pkgconfig}
PKG_CONFIG_PATH64=${PKG_CONFIG_PATH64:-/usr/lib64/pkgconfig}

WGET=${WGET:-ftp://oss.sgi.com/projects/xfs/cmd_tars/${NAMESRC}_${VERSION}-1.$EXT}
DOC="README doc/CHANGES doc/COPYING doc/INSTALL doc/PORTING"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Outils de gestion des attributs de fichiers"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On corrige le DESTDIR manquant :
cat $CWD/attr.fix-destdir.patch | patch -p1

# On positionne USE_ARCH :
export USE_ARCH=32

# Compilation pour 32 bits :
LIBDIRSUFFIX=""

sed -i Makefile -e '/autoconf/d' -e 's@default: $(CONFIGURE)@default:@'
sed -i "/AC_OUTPUT/i\AC_PROG_LIBTOOL" configure.in
cp install-sh{,.orig}
libtoolize -f -i
cp -f install-sh{.orig,}
aclocal -I m4

autoconf

CC="gcc ${BUILD32}" CXX="g++ ${BUILD32}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH32}" \
./configure \
	--prefix=/ \
	--exec-prefix=/ \
	--sysconfdir=/etc \
	--bindir=/usr/bin \
	--sbindir=/bin \
	--localstatedir=/var \
	--libdir=/lib${LIBDIRSUFFIX} \
	--libexecdir=/usr/lib${LIBDIRSUFFIX} \
	--includedir=/usr/include \
	--datadir=/usr/share \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--build=${TARGET32}

make DEBUG=-DNDEBUG LIBTOOL="$PWD/libtool"
make install LIBTOOL="$PWD/libtool" DESTDIR=${PKG}
make install-dev LIBTOOL="$PWD/libtool" DESTDIR=${PKG}
make install-lib LIBTOOL="$PWD/libtool" DESTDIR=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On s'assure des permissions des bibliothèques :
chmod 755 ${PKG}/lib${LIBDIRSUFFIX}/*.so

# On déplace les statiques dans /lib et on lie à /usr/lib :
mv ${PKG}/usr/lib${LIBDIRSUFFIX}/*.{,l}a ${PKG}/lib${LIBDIRSUFFIX}/
ln -sf ../../lib${LIBDIRSUFFIX}/libattr.la ${PKG}/usr/lib${LIBDIRSUFFIX}/libattr.la
ln -sf ../../lib${LIBDIRSUFFIX}/libattr.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libattr.a

# On corrige les liens symboliques :
ln -sf libattr.so.1 ${PKG}/lib${LIBDIRSUFFIX}/libattr.so
ln -sf ../../lib${LIBDIRSUFFIX}/libattr.so.1 ${PKG}/usr/lib${LIBDIRSUFFIX}/libattr.so

# On re-déballe et on se re-place dans les sources :
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On re-vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On corrige le DESTDIR manquant :
cat $CWD/attr.fix-destdir.patch | patch -p1

# On positionne USE_ARCH :
export USE_ARCH=64

# Compilation pour 64 bits :
LIBDIRSUFFIX="64"

sed -i Makefile -e '/autoconf/d' -e 's@default: $(CONFIGURE)@default:@'
sed -i "/AC_OUTPUT/i\AC_PROG_LIBTOOL" configure.in
cp install-sh{,.orig}
libtoolize -f -i
cp -f install-sh{.orig,}
aclocal -I m4

autoconf

CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
./configure \
	--prefix=/ \
	--exec-prefix=/ \
	--sysconfdir=/etc \
	--bindir=/usr/bin \
	--sbindir=/bin \
	--localstatedir=/var \
	--libdir=/lib${LIBDIRSUFFIX} \
	--libexecdir=/usr/lib${LIBDIRSUFFIX} \
	--includedir=/usr/include \
	--datadir=/usr/share \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--build=${TARGET64}

make DEBUG=-DNDEBUG LIBTOOL="$PWD/libtool"
make install LIBTOOL="$PWD/libtool" DESTDIR=${PKG}
make install-dev LIBTOOL="$PWD/libtool" DESTDIR=${PKG}
make install-lib LIBTOOL="$PWD/libtool" DESTDIR=${PKG}

# On neutralise USE_ARCH :
unset USE_ARCH

# On s'assure des permissions des bibliothèques :
chmod 755 ${PKG}/lib${LIBDIRSUFFIX}/*.so

# On déplace les statiques dans /lib et on lie à /usr/lib :
mv ${PKG}/usr/lib${LIBDIRSUFFIX}/*.{,l}a ${PKG}/lib${LIBDIRSUFFIX}/
ln -sf ../../lib${LIBDIRSUFFIX}/libattr.la ${PKG}/usr/lib${LIBDIRSUFFIX}/libattr.la
ln -sf ../../lib${LIBDIRSUFFIX}/libattr.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libattr.a

# On corrige les liens symboliques :
ln -sf libattr.so.1 ${PKG}/lib${LIBDIRSUFFIX}/libattr.so
ln -sf ../../lib${LIBDIRSUFFIX}/libattr.so.1 ${PKG}/usr/lib${LIBDIRSUFFIX}/libattr.so

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
rm -rf ${PKG}/usr/share/doc

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true




# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
