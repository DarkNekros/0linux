--- spack-3.7.orig/src/spackadd	2012-05-13 16:29:40.000000000 +0000
+++ spack-3.7/src/spackadd	2012-09-08 15:14:12.172740499 +0000
@@ -30,7 +30,7 @@
     local buffer="$1"; shift 1
     awk '{E=1}/^[0-9]+/{E=0}{exit E}' "$buffer" && return 0 # we should only have size here..
     local list="$(echo "$*" | sed 's/ /, /g;s/$/ file/;s/,\([^,]*\)$/ and\1s/')"
-    growl -1 "The package is corrupted (check $list)."
+    growl -1 "Le paquet est corrompu (vérifiez $list)."
     return 1
 }
 
@@ -41,7 +41,7 @@
     while read d; do
         [ -d "$d" ] && continue # directory is ok...
         [ ! -h "$d" -a ! -e "$d" ] && continue # not exist and not a broken symlink is also ok...
-        growl 0 "\"$d\" is not a directory as expected. Remove it..."
+        growl 0 "\"$d\" n'est pas un répertoire comme attendu. Suppression..."
         [ $dry -eq 0 ] && rm -f "$d"
     done
 }
@@ -65,10 +65,10 @@
     # $f FILE
     local spec="$(basename "$1" | awk '/[^-]+-[^-]+-[^-]+-[^-]+.spack$/{print 0;exit}{print 1}')"
     if [ ! -f "$1" ]; then
-        growl -1 "\"$1\" is not a regular file."
+        growl -1 "\"$1\" n'est pas un fichier régulier."
         return 1
     elif [ $spec -ne 0 ]; then
-        growl -1 "\"$1\" is not a well-formatted spack package name."
+        growl -1 "\"$1\" n'est pas un paquet Spack correctement nommé."
         return 2
     fi
     return 0
@@ -97,7 +97,7 @@
     local dry="$1"
     awk '{print; print >"/dev/stderr"}' 2>"$TMPDIR/files" | while read f; do
         [ -d "$f" ] || continue
-        growl 0 "found a \"$f\" directory where a file was expected. Remove it..."
+        growl 0 "\"$f\" détecté comme répertoire mais attendu comme fichier. Suppression..."
         [ $dry -eq 0 ] && rm -rf "$f"
     done
 }
@@ -110,7 +110,7 @@
         echo "(E) $*" >&2
         [ $code -lt 0 ] || exit $code # exit on positive codes.
     else
-        echo "(W) $*" >&2
+        echo "(!) $*" >&2
     fi
     return 0
 }
@@ -172,7 +172,7 @@
     RMPOSTDIR="$ROOT@RMPOSTDIR@"
     mkdir -p "$LOGDIR" "$RMLOGDIR" "$POSTDIR" "$RMPOSTDIR"
     TMPDIR="$(mktemp -d "$ROOT/tmp-$$-XXXXXX" 2>/dev/null)"
-    [ "$TMPDIR" ] || growl 1 "Can't create the secure temporary directory."
+    [ "$TMPDIR" ] || growl 1 "Impossible de créer un répertoire temporaire sécurisé."
 }
 
 pkginstall () {
@@ -181,23 +181,23 @@
     local re=$1 dry=$2 name="$(basename "$3" .spack)" cpio="$3" unzip="xz -d -c"
     filecheck "$cpio" || return 1
     echo "================================================================================" >&3
-    echo "Installing the $name package..."
+    echo "Installation de $name..."
     echo "================================================================================" >&3
-    [ ! -f "$LOGDIR/$name" ] || (growl $((1 - $re)) "\"$name\" is already installed.") || return 2
+    [ ! -f "$LOGDIR/$name" ] || (growl $((1 - $re)) "\"$name\" est déjà installé.") || return 2
     local files=$(cpio --quiet -t "files.?z" <"$cpio") post="$TMPDIR/post-install.sh"
     if [ "$files" = "files.gz" ]; then
         unzip="gzip -d -c"
     elif [ ! "$files" = "files.xz" ]; then
-        (growl 1 "Broken package: neither \"files.xz\" nor \"files.gz\" found inside.") || return 1
+        (growl 1 "Paquet corrompu : ni \"files.xz\" ni \"files.gz\" n'ont été trouvés.") || return 1
     fi
     preinstall $dry "$cpio" <"$cpio" || return 1
-    echo "  checking the file archive..." >&3
+    echo "  Vérification de l'archive..." >&3
     cpio -i --to-stdout "$files" < "$cpio" 2>"$TMPDIR/zsize"| $unzip 2>/dev/null \
                               | cpio -t 2>"$TMPDIR/size"| filescout $dry
     cpiocheck "$TMPDIR/zsize" "$files"|| return 1 # just skip the package.
     #[ -s "$TMPDIR/files" ] || (growl 1 "Broken package: can't get files from \"$files\".") || return 1
     logfmt $dry "$name" "$cpio"
-    echo "  installing the files..." >&3
+    echo "  Installation des fichiers..." >&3
     [ $dry -eq 0 ] || return 0
     (cd "$ROOT/"; cpio --quiet -i --to-stdout "$files" | $unzip | cpio --quiet -m -i -u) < "$cpio" || return 1
 }
@@ -222,7 +222,7 @@
         echo "$pat"
     else
         # We are not in "upgrade or install new" mode...
-        growl -1 "Can't satisfy the \"$name\" request: no matching package."
+        growl -1 "Impossible de satisfaire la requête : \"$name\" est introuvable."
         return 1
     fi
     return 0
@@ -234,38 +234,38 @@
     local dry=$1 up=$2  stamp=""; shift 2
     while [ $# -gt 0 ]; do
         echo "================================================================================" >&3
-        echo "Removing the \"$1\" package..."
+        echo "Désinstallation de \"$1\"..."
         echo "================================================================================" >&3
         rm -f "$TMPDIR/files" "$TMPDIR/dirs" "$TMPDIR/symkept" "$TMPDIR/cats"
         touch "$TMPDIR/files" "$TMPDIR/dirs" "$TMPDIR/symkept" "$TMPDIR/cats"
         linkregister "$1" "$TMPDIR/symkept" "$POSTDIR/"* | while read -r link; do
             if [ -h "$ROOT/$link" ]; then
-                echo "  unlink  $link" >&3
+                echo "  Déréférencement de $link" >&3
                 [ $dry -gt 0 ] || rm -f "$ROOT/$link"
             else
-                growl 0 "Can't unlink \"$link\" (missing or not a symbolic link)."
+                growl 0 "Impossible de déréférencer le lien \"$link\" (manquant/cassé)."
             fi
         done
         fileregister "$1" "$TMPDIR/dirs" "$TMPDIR/files" "$TMPDIR/cats" "$TMPDIR/symkept"
         sort "$TMPDIR/files" | while read -r file; do
             if [ -f "$ROOT/$file" ]; then
-                echo "  delete    (file)     $file" >&3
+                echo "  Suppression du fichier $file" >&3
                 [ $dry -gt 0 ] || rm -f "$ROOT/$file"
             else
-                growl 0 "Can't delete \"$file\" (missing or not a regular file)."
+                growl 0 "Impossible de supprimer \"$file\" (manquant/non-régulier)."
             fi
         done
         sort "$TMPDIR/cats" | while read -r cat; do
             [ -f "$ROOT/$cat" ] || continue
-            echo "  delete    (file)     $cat" >&3
+            echo "  Suppression du fichier $cat" >&3
             [ $dry -gt 0 ] || rm -f "$ROOT/$cat"
         done
         sort -r "$TMPDIR/dirs" | while read -r dir; do
             if [ -d "$ROOT/$dir" ]; then
-                echo "  delete  (directory)  $dir" >&3
-                [ $dry -gt 0 ] || rmdir "$ROOT/$dir" 2>/dev/null || growl 0 "\"$dir\" is not empty. Won't be deleted..."
+                echo "  Suppression du répertoire $dir" >&3
+                [ $dry -gt 0 ] || rmdir "$ROOT/$dir" 2>/dev/null || growl 0 "$ROOT/$dir" 2>/dev/null || growl 0 "\"$dir\" n'est pas vide. Ignoré..."
             else
-                growl 0 "Can't delete \"$dir\" (missing or not a directory)."
+                growl 0 "Impossible de supprimer le répertoire manquant \"$dir\"."
             fi
         done
         [ $up -eq 0 ] || stamp=$(date "+-upgraded-%Y-%m-%d,%T")
@@ -281,7 +281,7 @@
     local dry=$1 name="$(basename "$2" .spack)" post="$TMPDIR/post-install.sh"
     [ -O ./sbin/ldconfig -a -x ./sbin/ldconfig ] && ./sbin/ldconfig  -r "." # use the $ROOT's ldconfig.
     if [ -f "$post" ]; then  # ^^^ the user may not be root during tests & debugs...
-        echo "  executing the post-install script..." >&3
+        echo "  Exécution de la post-installation..." >&3
         [ $dry -eq 0 ] || return 0
         sh "$post"
         cp -f "$post" "$POSTDIR/$name"
@@ -298,11 +298,11 @@
         cpio -i about.txt post-install.sh pre-install.sh <&0 2>./size
         cpiocheck ./size about.txt post-install.sh pre-install.sh || return 1
         [ -r ./about.txt ] && whatabout "$name" < ./about.txt >&3
-        echo "  building the directory tree..." >&3
+        echo "  Construction de l'arborescence du répertoire..." >&3
         sed '/^mkdir/{s/^[^"]*"\?\|" *$//g;/^$/d;s/\\\\/"ESC/g;s/\([^\\]\)" "/\1\n/g;s/\\//g;s/"ESC/\\/g;p}' \
            -n ./pre-install.sh 2>./check >./dirs  # we format the list of directories
            if [ -s ./check ]; then
-               growl 1 "Broken or missing pre-install.sh script."
+               growl 1 "Script 'pre-install.sh' manquant ou corrompu."
            fi) || return 1
         ( cd "$ROOT/" 
         dirscout $dry < "$TMPDIR/dirs"
@@ -331,49 +331,48 @@
     # Print the help digest on stdout.
     # $f
     cat >&1 << DIGEST
-@ADD*spackadd - upgrade or install the Spack packages.
+@ADD*spackadd - installe ou met à niveau un paquet Spack.
 @ADD
-@ADDSpackadd install or upgrade the packages given on the command line. In order
-@ADDto be acknowledged, these ones must meet the standard Slackware(R) naming
-@ADDpattern: "name-version-architecture-build" and bear a ".spack" extension.
+@ADDSpackadd installe ou met à niveau les paquets spécifiés, lesquels doivent
+@ADDrépondre aux spécifications de nommage originelles de Slackware :
 @ADD
-@ADDBy default, spackadd tries first to upgrade your installation with the given
-@ADDpackages then, if no other installed versions of these are found, it perform
-@ADDan installation.
+@ADD    « nom-version-architecture-décomptedesempaquetages »
 @ADD
-@ADDUsage: spackadd <package(s)> [option(s)]
+@ADDet porter l'extension « .spack ».
+@ADD'spackadd' tente d'abord de mettre à niveau l'installation des paquets
+@ADDspécifiés puis exécute une installation classique si aucun paquet similaire
+@ADDn'a été trouvé sur le système.
 @ADD
-@RM*spackrm - remove installed packages from the system.
+@ADDUtilisation : spackadd <paquet(s)> [option(s)]
+@ADD
+@RM*spackrm - supprime un paquet du système.
 @RM
-@RM Spackrm removes the packages requested from the command-line. These ones can
-@RM be specified under their canonical names, "name-version-architecture-build",
-@RM or simply under their base names, "name". All of the packages matching a
-@RM request are deleted.
+@RM Spackrm supprime le ou les paquets spécifiés. On peut les spécifier avec
+@RM leur nom canonique : "nom-version-architecture-empaquetage",
+@RM ou leur simple nom de base, "nom".
+@RM Tous les paquets correspondants à la requête sont supprimés.
 @RM
-@RM Usage: spackrm <name(s)> [option(s)]
+@RM Utilisation : spackrm <noms(s)> [option(s)]
 @RM
-    Options:
-
-@ADD    -a, --about     ---     just print the description of the package.
-@ADD    -f, --force     ---     install a package even if it is already
-@ADD                            installed. Has no effect in pure upgrade mode.
-        -g, --debug     ---     do not remove intermediate files attached to the
-                                current process.
-        -h, --help      ---     print this help on stdout then exit.
-@ADD    -i, --install   ---     install the packages without attempting to
-@ADD                            upgrade them first.
-        -q, --quiet     ---     reduce the output to the strict necessary.
-        --root=<dir>    ---     use <dir> as root instead of "/".
-        -s, --stdin     ---     read the package names on the standard input.
-@ADD    -u, --upgrade   ---     replace the previously installed packages, but
-@ADD                            do not attempt to install new ones.
-        -y, --dry-run   ---     do not really perform actions, just try to show
-                                what would be produced if it was the case.
-
-
-    Bug reports, suggestions, feedbacks, questions, and so on, should be sent to
-    Seb (author/maintainer, the license -- MIT/X11 -- is at the head of the
-    script) here: <sbb at tuxfamily dot org>.
+    Options :
+ 
+@ADD    -a, --about    Affiche seulement la description du paquet.
+@ADD    -f, --force    Installe un paquet même s'il est déjà installé.
+@ADD                   N'a pas d'effet sur une mise à niveau.
+        -g, --debug    Ne supprime pas les fichiers de traitement.
+        -h, --help     Affiche cette aide sur la sortie et quitte.
+@ADD    -i, --install  Installe le paquet sans tenter de le mettre à niveau.
+        -q, --quiet    Mode moins verbeux.
+        --root=RÉP     Utilise la racine 'RÉP' plutôt que '/'.
+        -s, --stdin    Lit les noms de paquets sur l'entrée standard.
+@ADD    -u, --upgrade  Exécute une mise à niveau mais n'installe pas les
+@ADD                   nouveaux paquets.
+        -y, --dry-run  N'exécute pas vraiment la ligne de commande. Cette option
+                       montre ce qui devrait se passer sans toucher au système.
+
+    Rapports de bogues, suggestions, retours, questions, etc. sont à envoyer à
+    Seb (l'auteur et mainteneur ; la licence MIT/X11  se trouve en tête de
+    chaque script) à cette adresse : sbb CHEZ tuxfamily POINT org@ADD
 
 DIGEST
 }
@@ -420,7 +419,7 @@
         1-u|1--upgrade) [ $imode -gt 0 ] && imode=$(($imode - 1)) ;;
         ?-y|?--dry-run) dry=1 ;;
         ?--root=?*) ROOT="$(echo "$arg" | cut -f 2- -d "=")" ;;
-        ?-*) growl 1 "\"$arg\" is not a valid option." ;;
+        ?-*) growl 1 "\"$arg\" est une option incorrecte." ;;
         *) ARGV="$ARGV $SHIFT"; SHIFT=0;;
     esac
     SHIFT=$(($SHIFT+1))
