#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)
PKGCAT=base
NAMESRC=${NAMESRC:-bash}
VERSION=${VERSION:-4.1}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-bash}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets/$PKGCAT}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}

WGET=${WGET:-http://ftp.gnu.org/gnu/$NAMESRC/$NAMESRC-$VERSION.$EXT}
DOC="ABOUT-NLS AUTHORS CHANGES COMPAT COPYING INSTALL MANIFEST* NEWS \
	NOTES POSIX RBASH README doc/FAQ doc/INTRO"
# On compte les correctifs :
CORRECTIFS=`find $CWD/patches -type f | wc -l 2> /dev/null`
if [ "$CORRECTIFS" = "" ]; then
	$CORRECTIFS=0
fi
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Interpréteur (shell) compatible sh"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On applique tous les correctifs des mainteneurs :
for patch in $CWD/patches/bash41-???; do
	cat ${patch} | patch -p0
done

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
./configure \
	--prefix=/usr \
	--bindir=/bin \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--htmldir=/usr/doc/${NAMETGZ}-${VERSION} \
	--with-installed-readline=/usr/lib${LIBDIRSUFFIX} \
	--without-bash-malloc \
	--build=${TARGET64}

make -j3 || make
fakeroot make install DESTDIR=${PKG}

# Ajustements :
mv ${PKG}/bin/bash ${PKG}/bin/bash4.new

# On n'inclut pas bashbug :
rm -rf ${PKG}/bin/bashbug ${PKG}/usr/man/man1/bashbug.1

# On ajoute 2 manuels manquants :
cp doc/{builtins,rbash}.1 ${PKG}/usr/man/man1

# On crée le lien pour le binaire 'bash' :
mkdir -p ${PKG}/usr/bin
ln -sf ../../bin/bash ${PKG}/usr/bin/bash

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/usr/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

if [ -r bin/bash ]; then
	mv bin/bash bin/bash.old
fi

mv bin/bash4.new bin/bash

if [ -f bin/bash.old ]; then
	rm -f bin/bash.old
fi

if [ ! -r etc/shells ]; then
	touch etc/shells
	chmod 644 etc/shells
fi

if fgrep "/bin/bash" etc/shells 1> /dev/null 2> /dev/null; then
	true
else
	echo "/bin/bash" >> etc/shells
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spackpkg . $OUT/${NAMETGZ}-${VERSION}.${CORRECTIFS}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0

