#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

NAMESRC=${NAMESRC:-ncurses}
VERSION=${VERSION:-5.7}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-ncurses}
BUILD=${BUILD:-2}


TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}

WGET=${WGET:-http://ftp.gnu.org/gnu/$NAMESRC/$NAMESRC-$VERSION.$EXT}
DOC="ANNOUNCE INSTALL MANIFEST NEWS README* TO-DO"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Bibliothèque d'affichage « new curses »"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Correction de syntaxe pour TABSIZE :
cat $CWD/ncurses.mkhashsize.diff | patch -p1 --verbose

# Compilation pour 32 bits :
SLKCFLAGS="-O2 -march=i686 -pipe"
LIBDIRSUFFIX=""
CC="gcc ${BUILD32}" CXX="g++ ${BUILD32}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
./configure --prefix=/usr \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--without-debug \
	--without-profile \
	--with-manpage-format=normal \
	--with-gpm \
	--disable-termcap \
	--with-normal \
	--with-shared \
	--enable-symlinks \
	--enable-widec \
	--build=${TARGET32}

make
make install DESTDIR=${PKG}

# On renomme les binaires 32 bits :
mv ${PKG}/usr/bin/ncursesw5-config{,-32}

# On va utiliser le stratagème de LFS pour tromper les applications qui ne veulent
# pas de notre 'ncurses' « wide-character » et celles qui ne sont compatibles qu'avec
# la vieillisante 'libcurses' :
# Le stratagème :
mkdir -p ${PKG}/lib${LIBDIRSUFFIX}
mv ${PKG}/usr/lib${LIBDIRSUFFIX}/libncursesw.so.5* ${PKG}/lib${LIBDIRSUFFIX}
ln -sf ../../lib${LIBDIRSUFFIX}/libncursesw.so.5 ${PKG}/usr/lib${LIBDIRSUFFIX}/libncursesw.so

for bibliotheque in ncurses form panel menu; do
	rm -f ${PKG}/usr/lib${LIBDIRSUFFIX}/lib${bibliotheque}.so
	echo "INPUT(-l${bibliotheque}w)" > ${PKG}/usr/lib${LIBDIRSUFFIX}/lib${bibliotheque}.so
	ln -sf lib${bibliotheque}w.a ${PKG}/usr/lib${LIBDIRSUFFIX}/lib${bibliotheque}.a
done

# On lie à la bibliothèque statique :
ln -sf libncurses++w.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libncurses++.a

# On reste compatible avec les vieilleries :
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libcursesw.so
echo "INPUT(-lncursesw)" > ${PKG}/usr/lib${LIBDIRSUFFIX}/libcursesw.so
ln -sf libncurses.so ${PKG}/usr/lib${LIBDIRSUFFIX}/libcurses.so
ln -sf libncursesw.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libcursesw.a
ln -sf libncurses.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libcurses.a
ln -sf ncursesw5-config-32 ${PKG}/usr/bin/ncurses5-config-32
ln -sfv ../share/terminfo ${PKG}/usr/lib${LIBDIRSUFFIX}/terminfo

# On re-déballe et on se re-place dans les sources :
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On re-vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Correction de syntaxe pour TABSIZE :
cat $CWD/ncurses.mkhashsize.diff | patch -p1 --verbose

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
./configure \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--without-debug \
	--without-profile \
	--with-manpage-format=normal \
	--with-gpm \
	--disable-termcap \
	--with-normal \
	--with-shared \
	--enable-symlinks \
	--enable-widec \
	--build=${TARGET64}

make
make install DESTDIR=${PKG}

# On renomme les binaires 64 bits :
mv ${PKG}/usr/bin/ncursesw5-config{,-64}

# On va utiliser le stratagème de LFS pour tromper les applications qui ne veulent
# pas de notre 'ncurses' « wide-character » et celles qui ne sont compatibles qu'avec
# la vieillisante 'libcurses' :
# Le stratagème :
mkdir -p ${PKG}/lib${LIBDIRSUFFIX}
mv ${PKG}/usr/lib${LIBDIRSUFFIX}/libncursesw.so.5* ${PKG}/lib${LIBDIRSUFFIX}
ln -sf ../../lib${LIBDIRSUFFIX}/libncursesw.so.5 ${PKG}/usr/lib${LIBDIRSUFFIX}/libncursesw.so

for bibliotheque in ncurses form panel menu; do
	rm -f ${PKG}/usr/lib${LIBDIRSUFFIX}/lib${bibliotheque}.so
	echo "INPUT(-l${bibliotheque}w)" > ${PKG}/usr/lib${LIBDIRSUFFIX}/lib${bibliotheque}.so
	ln -sf lib${bibliotheque}w.a ${PKG}/usr/lib${LIBDIRSUFFIX}/lib${bibliotheque}.a
done

# On lie à la bibliothèque statique :
ln -sf libncurses++w.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libncurses++.a

# On reste compatible avec les vieilleries :
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libcursesw.so
echo "INPUT(-lncursesw)" > ${PKG}/usr/lib${LIBDIRSUFFIX}/libcursesw.so
ln -sf libncurses.so ${PKG}/usr/lib${LIBDIRSUFFIX}/libcurses.so
ln -sf libncursesw.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libcursesw.a
ln -sf libncurses.a ${PKG}/usr/lib${LIBDIRSUFFIX}/libcurses.a
ln -sf ncursesw5-config-64 ${PKG}/usr/bin/ncurses5-config-64
ln -sfv ../share/terminfo ${PKG}/usr/lib${LIBDIRSUFFIX}/terminfo

# On lie un faux binaire au programme enveloppe :
ln -sf multiarch_wrapper ${PKG}/usr/bin/ncursesw5-config

# On renomme l'en-tête 'termcap.h' pour n'en écraser aucun :
mv ${PKG}/usr/include/termcap.h ${PKG}/usr/include/termcap-ncurses.h

# On positionne TERMINFO dans notre paquet :
export TERMINFO=${PKG}/usr/share/terminfo

# On compile alors les descripteurs xterm, screen, rxvt, Eterm et rxvt-unicode :
for ti in $CWD/{xterm.terminfo,screeninfo.src,rxvt.terminfo,Eterm.ti,rxvt-unicode.terminfo}; do
	progs/tic -v $ti
done

# On en a fini avec notre TERMINFO :
unset TERMINFO

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/c++
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a c++/{NEWS,PROBLEMS,README-first} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/c++
cp -a doc/ ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true




# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
