#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

VERSION=${VERSION:-0.3}
NAMETGZ=${NAMETGZ:-etc}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-noarch}

########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Fichiers de configuration du système"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On crée la structure de la configuration système :
mkdir -p ${PKG}/sbin
mkdir -p ${PKG}/var/{log,run}
mkdir -p ${PKG}/etc/{profile.d,skel}
mkdir -p ${PKG}/tmp

# On copie tous les fichiers de configuration et on trie :
for configuration in *.new termcap-Linux termcap-BSD; do
	cp -a $CWD/$configuration ${PKG}/etc
done

# On place les fichiers de langues pour le shell :
mv ${PKG}/etc/lang.* ${PKG}/etc/profile.d
chmod 755 ${PKG}/etc/profile.d/lang.*

# On place les fichiers journaux :
touch ${PKG}/var/log/{wtmp,lastlog}.new
chmod 664 ${PKG}/var/log/wtmp.new

# On place utmp.new :
touch ${PKG}/var/run/utmp.new
chmod 664 ${PKG}/var/run/utmp.new

# On place le fichier de configuration du squelette de compte utilisateur :
cp -a $CWD/xsession ${PKG}/etc/skel/.xsession
chmod 755 ${PKG}/etc/skel/.xsession

# On copie le script 'localeconfig' :
cp -a $CWD/localeconfig ${PKG}/sbin
chmod 755 ${PKG}/sbin/localeconfig

# On restreint les permissions sur *shadow :
chmod 640 ${PKG}/etc/{,g}shadow.new

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

config etc/mtab.new
config etc/motd.new
config etc/group.new
config etc/csh.login.new
config etc/ld.so.conf.new
config etc/profile.new
config etc/hosts.new
config etc/inputrc.new
config etc/shadow.new
config etc/passwd.new
config etc/printcap.new
config etc/networks.new
config etc/HOSTNAME.new
config etc/gshadow.new
config etc/issue.new
config etc/securetty.new
config etc/shells.new
config etc/services.new
config etc/issue.net.new
config etc/nsswitch.conf.new
config etc/profile.d/lang.csh.new
config etc/profile.d/lang.sh.new
config var/log/lastlog.new
config var/log/wtmp.new
config var/run/utmp.new

# On nettoie les fichiers superflus :
rm -f etc/mtab.new
rm -f etc/motd.new
rm -f etc/ld.so.conf.new
rm -f etc/hosts.new
rm -f etc/networks.new
rm -f etc/HOSTNAME.new
rm -f etc/shells.new
rm -f etc/printcap.new
rm -f etc/issue.new
rm -f etc/issue.net.new
rm -f var/run/utmp.new
rm -f var/log/lastlog.new
rm -f var/log/wtmp.new

# On s'assure des permissions :
chown root.utmp var/run/utmp var/log/wtmp
chmod 664 var/run/utmp var/log/wtmp
chown root.shadow etc/shadow etc/gshadow
chmod 640 etc/shadow etc/gshadow

# On s'assure de la présence du fichier 'termcap' :
if [ ! -r etc/termcap ]; then
	cp -a etc/termcap-Linux etc/termcap
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true




# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	chown root:utmp ${PKG}/var/log/wtmp.new
	chown root:utmp ${PKG}/var/run/utmp.new
	chown root:shadow ${PKG}/etc/{,g}shadow.new
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
