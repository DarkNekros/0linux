#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

# On définit la catégorie du paquet :
for categ in base extra opt xfce xorg; do
if [ ! "$(echo $(dirname $CWD) | grep $categ)" = "" ]; then
PKGCAT="$categ"
fi
done


NAMESRC=${NAMESRC:-e2fsprogs}
VERSION=${VERSION:-1.41.12}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-e2fsprogs}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets/$PKGCAT}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}

WGET=${WGET:-http://downloads.sourceforge.net/project/e2fsprogs/e2fsprogs/1.41.12/e2fsprogs-1.41.12.tar.gz?use_mirror=freefr}
DOC="ABOUT-NLS COPYING INSTALL* README RELEASE-NOTES SHLIBS SUBMITTING-PATCHES doc/libblkid.txt"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Outils pour les systèmes de fichiers Ext"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Un sous-répertoire de compilation dans les sources est recommandé :
mkdir build
cd build

# Compilation pour 32 bits :
SLKCFLAGS="-O2 -march=i686 -pipe"
LIBDIRSUFFIX=""
CC="gcc ${BUILD32}" CXX="g++ ${BUILD32}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
../configure PKG_CONFIG=true \
	--prefix=/usr \
	--libdir=/lib${LIBDIRSUFFIX} \
	--with-root-prefix="" \
	--includedir=/usr/include \
	--datadir=/usr/share \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--enable-elf-shlibs \
	--disable-libblkid \
	--disable-libuuid \
	--disable-uuidd \
	--disable-fsck \
	--build=${TARGET32}

make libs
fakeroot make install-libs DESTDIR=${PKG}

cd ..

# On rend les bibliothèques statiques modifiables pour pouvoir les « stripper » :
chmod 0644 ${PKG}/lib${LIBDIRSUFFIX}/{libcom_err,libe2p,libext2fs,libss}.a

# On déplace le répertoire 'pkgconfig' vers /usr/lib${LIBDIRSUFFIX} :
mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}
mv ${PKG}/lib${LIBDIRSUFFIX}/pkgconfig ${PKG}/usr/lib${LIBDIRSUFFIX}

# On re-déballe et on se re-place dans les sources :
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On re-vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On modifie le chemin des bibliothèques par défaut :
sed -i '/libdir.*=.*\/lib/s@/lib@/lib64@g' configure

# Un sous-répertoire de compilation dans les sources est recommandé :
mkdir build
cd build

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
../configure PKG_CONFIG=true \
	--prefix=/usr \
	--libdir=/lib${LIBDIRSUFFIX} \
	--with-root-prefix="" \
	--includedir=/usr/include \
	--datadir=/usr/share \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--enable-elf-shlibs \
	--disable-libblkid \
	--disable-libuuid \
	--disable-uuidd \
	--disable-fsck \
	--build=${TARGET64}

make LIBUUID="-luuid" STATIC_LIBUUID="-luuid" LIBBLKID="-lblkid" STATIC_LIBBLKID="-lblkid"
fakeroot make install DESTDIR=${PKG}
fakeroot make install-libs DESTDIR=${PKG}

cd ..

# On renomme mke2fs.conf pour ne pas l'écraser lors de mises à niveau :
mv ${PKG}/etc/mke2fs.conf ${PKG}/etc/mke2fs.conf.new

# On supprime tous les liens « en dur » pour les remplacer par des liens symboliques :
rm -f ${PKG}/sbin/mkfs.{ext2,ext3,ext4,ext4dev}
rm -f ${PKG}/sbin/fsck.{ext2,ext3,ext4dev}
rm -f ${PKG}/sbin/{e2label,findfs}

ln -sf mke2fs ${PKG}/sbin/mkfs.ext2
ln -sf mke2fs ${PKG}/sbin/mkfs.ext3
ln -sf mke2fs ${PKG}/sbin/mkfs.ext4
ln -sf mke2fs ${PKG}/sbin/mkfs.ext4dev
ln -sf tune2fs ${PKG}/sbin/e2label
ln -sf tune2fs ${PKG}/sbin/findfs

# On modifie, comme Slackware, l'invocation de 'e2fsck' afin d'afficher une barre 
# de progression :
cat << EOF > ${PKG}/sbin/fsck.ext2
#!/usr/bin/env bash
exec /sbin/e2fsck -C 0 \$*
EOF

chmod 0755 ${PKG}/sbin/fsck.ext2

# On rend les bibliothèques statiques modifiables pour pouvoir les « stripper » :
chmod 0644 ${PKG}/lib${LIBDIRSUFFIX}/{libcom_err,libe2p,libext2fs,libss}.a

# Puis on COPIE fsck.ext2 afin que l'invocation ci-dessus soit correcte (variable $*) :
cp -a ${PKG}/sbin/fsck.ext2 ${PKG}/sbin/fsck.ext3
cp -a ${PKG}/sbin/fsck.ext2 ${PKG}/sbin/fsck.ext4
cp -a ${PKG}/sbin/fsck.ext2 ${PKG}/sbin/fsck.ext4dev

# Idem pour les liens des manuels :
rm -f ${PKG}/usr/man/man8/fsck.ext{2,3}.8
rm -f ${PKG}/usr/man/man8/mkfs.ext{2,3,4,4dev}.8
ln -sf e2fsck.8 ${PKG}/usr/man/man8/fsck.ext2.8
ln -sf e2fsck.8 ${PKG}/usr/man/man8/fsck.ext3.8
ln -sf e2fsck.8 ${PKG}/usr/man/man8/fsck.ext4.8
ln -sf e2fsck.8 ${PKG}/usr/man/man8/fsck.ext4dev.8
ln -sf mke2fs.8 ${PKG}/usr/man/man8/mkfs.ext2.8
ln -sf mke2fs.8 ${PKG}/usr/man/man8/mkfs.ext3.8
ln -sf mke2fs.8 ${PKG}/usr/man/man8/mkfs.ext4.8
ln -sf mke2fs.8 ${PKG}/usr/man/man8/mkfs.ext4dev.8

# On déplace le répertoire 'pkgconfig' vers /usr/lib${LIBDIRSUFFIX} :
mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}
mv ${PKG}/lib${LIBDIRSUFFIX}/pkgconfig ${PKG}/usr/lib${LIBDIRSUFFIX}

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/usr/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

config etc/mke2fs.conf.new

if [ -x usr/bin/install-info ]; then
	install-info --info-dir=/usr/info /usr/info/libext2fs.info.gz 2> /dev/null
fi

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true




# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spackpkg . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
