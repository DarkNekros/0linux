#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

# On définit la catégorie du paquet :
for categ in base extra opt xfce xorg; do
	if [ ! "$(echo $(dirname $CWD) | grep $categ)" = "" ]; then
		PKGCAT="$categ"
	fi
done

NAMESRC=${NAMESRC:-kbd}
VERSION=${VERSION:-1.15.2}
EXT=${EXT:-tar.gz}
NAMETGZ=${NAMETGZ:-kbd}
BUILD=${BUILD:-3}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets/$PKGCAT}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}

WGET=${WGET:-http://ftp.altlinux.com/pub/people/legion/$NAMESRC/$NAMESRC-$VERSION.$EXT}
DOC="AUTHORS COPYING CREDITS ChangeLog INSTALL NEWS README doc/*"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Dispositions pour claviers et polices pour console"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On ajoute des polices supplémentaires :
mkdir -p ${PKG}/lib/kbd/consolefonts

for police in $CWD/polices/*.gz; do
	cp -a ${police} ${PKG}/lib/kbd/consolefonts
done

# On corrige le comportement des touches « Supprimer » et « Retour arrière »
# dans certains dispositions :
cat $CWD/kbd-1.15.1-backspace-1.patch | patch -p1

# On applique également le correctif pour l'euro de la disposition « nl » :
cat $CWD/nl.euro.diff | patch -p1

# On va suivre Slackware concernant les dispositions 7 bits ainsi que celles
# qui ne sont pas compatibles Euro :
mv data/keymaps/i386/qwerty/fi.map data/keymaps/i386/qwerty/fi-old.map
cp -a data/keymaps/i386/qwerty/fi-latin9.map data/keymaps/i386/qwerty/fi.map
cp -a data/keymaps/i386/qwerty/pt-latin9.map data/keymaps/i386/qwerty/pt.map
cp -a data/keymaps/i386/qwerty/sv-latin1.map data/keymaps/i386/qwerty/se-latin1.map
mv data/keymaps/i386/azerty/fr.map data/keymaps/i386/azerty/fr-obsolete.map
cp -a data/keymaps/i386/azerty/fr-latin9.map data/keymaps/i386/azerty/fr.map

# Toujours en suivant Slackware, on renomme les fichiers dont les noms entrent
# en conflit avec d'autres :
mv data/keymaps/i386/dvorak/no.map data/keymaps/i386/dvorak/no-dvorak.map
mv data/keymaps/i386/fgGIod/trf.map data/keymaps/i386/fgGIod/trf-fgGIod.map
mv data/keymaps/i386/olpc/es.map data/keymaps/i386/olpc/es-olpc.map
mv data/keymaps/i386/olpc/pt.map data/keymaps/i386/olpc/pt-olpc.map
mv data/keymaps/i386/qwerty/cz.map data/keymaps/i386/qwerty/cz-qwerty.map

# On génère les scripts standard, dont le 'configure' :
autoreconf

# On va installer les dispositions de touches dans /lib plutôt que /usr/share ;
# elles seront ainsi disponibles sur la partition racine dès l'amorçage.
# *** ATTENTION ! Ce paquet attaque votre racine sans scrupules avant l'empaquetage ! ***

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
PKG_CONFIG_PATH="${PKG_CONFIG_PATH64}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
--prefix=/usr \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--datadir=/lib/kbd \
	--enable-nls \
	--build=${TARGET64}

make -j3 || make
fakeroot make install DESTDIR=${PKG}

# On reste compatible en créant un lien vers /lib/kbd :
mkdir -p ${PKG}/usr/share
ln -sf ../../lib/kbd ${PKG}/usr/share/kbd

# Certains binaires ont leur place dans /bin ; on les déplace et on les lie :
mkdir -p ${PKG}/bin

for binaire in kbd_mode loadkeys openvt setfont; do
	mv ${PKG}/usr/bin/${binaire} ${PKG}/bin
	ln -sf ../../bin/${binaire} ${PKG}/usr/bin/${binaire}
done

# On ajoute une disposition coréenne QWERTY « factice » :
ln -sf us.map.gz ${PKG}/lib/kbd/keymaps/i386/qwerty/ko.map.gz

# On ajoute les dispositions pour bépo et on les compresse :
cp -a $CWD/fr-dvorak-bepo*.map ${PKG}/lib/kbd/keymaps/i386/dvorak
chmod 644 ${PKG}/lib/kbd/keymaps/i386/dvorak/fr-dvorak-bepo*.map
gzip -9 ${PKG}/lib/kbd/keymaps/i386/dvorak/fr-dvorak-bepo*.map

# On place le fichier service de chargement de la police console :
mkdir -p ${PKG}/etc/rc.d
cp -a $CWD/rc.font.new ${PKG}/etc/rc.d
chmod 755 ${PKG}/etc/rc.d/rc.font.new

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/fr-dvorak-bepo
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a $CWD/{CC-SA-BY,GFDL}.txt ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/fr-dvorak-bepo

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/usr/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

config etc/rc.d/rc.font.new

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
