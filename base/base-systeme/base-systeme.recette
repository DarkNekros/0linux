#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

PKGCAT=base
NAMESRC=${NAMESRC:-base-systeme}
VERSION=${VERSION:-4.2.3}
NAMETGZ=${NAMETGZ:-base-systeme}
DESC="Structure de base du système"

. /usr/share/0outils/fonctions_paquets.sh

cflags # cflags() permet de définir $PKGARCH et $LIBDIRSUFFIX

# On crée toute la structure de base  :
mkdir -p ${PKG}/{0/paquets,boot,dev,home,opt,proc,root,run,srv,sys,tmp}

# Les sous-répertoires :
mkdir -p ${PKG}/etc/{0linux,X11,modprobe.d,profile.d,skel}
mkdir -p ${PKG}/media/{cdrecorder0,cdrecorder1,cdrom0,cdrom1,dvd0,dvd1,floppy0,floppy1,hd0,hd1,memory0,memory1,zip0,zip1}
mkdir -p ${PKG}/mnt/{cdrecorder,cdrom,dvd,floppy,hd,memory,tmp,zip}
mkdir -p ${PKG}/srv/ftp
mkdir -p ${PKG}/usr/{bin,dict,doc,include,info,lib${LIBDIRSUFFIX},local/paquets,sbin,src}
mkdir -p ${PKG}/usr/man/man{1,2,3,4,5,6,7,8,9,n}
mkdir -p ${PKG}/usr/share/{games,wallpapers}
mkdir -p ${PKG}/run/lock
mkdir -p ${PKG}/var/{cache,empty,local,mail,opt,spool,tmp}
mkdir -p ${PKG}/var/log/{packages,removed_packages,removed_scripts,setup,scripts}

# Le cas du multilib sous x86_64 : '/usr/lib' n'est pas un lien :
if [ "${PKGARCH}" = "x86_64" ]; then
	mkdir -p ${PKG}/usr/lib
fi
 
# On spécifie certaines permissions :
# /root :
chmod 1710 ${PKG}/root

# Les répertoires temporaires :
chmod 1777 ${PKG}/{var/tmp,tmp}

# La hiérarchie pour les paquets compilés par recettes :
chmod -R 777 ${PKG}/usr/local/paquets

# /srv/ftp, certains démons FTP refusant de se lancer si les droits en écriture existent :
chmod 555 ${PKG}/srv/ftp

# On crée des liens pour contenter tout le monde... :
ln -sf ../var/tmp     ${PKG}/usr/tmp
ln -sf ../var/adm     ${PKG}/usr/adm
ln -sf ../var/log     ${PKG}/var/adm
ln -sf ../var/spool   ${PKG}/usr/spool
ln -sf ../../var/mail ${PKG}/var/spool/mail

# Un peu de francophonie !
# Dans les journaux :
ln -sf packages ${PKG}/var/log/paquets
ln -sf setup    ${PKG}/var/log/installation

# Dans /media :
ln -sf cdrecorder0 ${PKG}/media/cdrecorder
ln -sf cdrecorder  ${PKG}/media/graveur_cd
ln -sf floppy0     ${PKG}/media/floppy
ln -sf floppy      ${PKG}/media/disquette
ln -sf hd0         ${PKG}/media/hd
ln -sf hd          ${PKG}/media/disque_dur
ln -sf cdrom0      ${PKG}/media/cdrom
ln -sf dvd0        ${PKG}/media/dvd
ln -sf memory0     ${PKG}/media/memory
ln -sf zip0        ${PKG}/media/zip

# Dans /mnt :
ln -sf cdrecorder ${PKG}/mnt/graveur_cd
ln -sf floppy     ${PKG}/mnt/disquette
ln -sf hd         ${PKG}/mnt/disque_dur
ln -sf wallpapers ${PKG}/usr/share/papiers_peints
ln -sf games      ${PKG}/usr/share/jeux

# Quelques liens standard pour la doc :
ln -sf ../doc  ${PKG}/usr/share/doc
ln -sf ../info ${PKG}/usr/share/info
ln -sf ../man  ${PKG}/usr/share/man

# Et les liens vers de '/var' vers le tmpfs '/run' :
ln -sf ../run ${PKG}/var/
ln -sf ../run/lock ${PKG}/var/

# On copie tous les fichiers de configuration en veillant à ne rien écraser :
for configuration in $CWD/etc/*; do
	cp -a ${configuration} ${PKG}/etc/$(basename ${configuration}).0nouveau
done

# on écrase ceux-ci, qui doivent toujours être à jour :
for f in issue \
issue.net \
motd \
networks \
nsswitch.conf \
printcap \
profile \
securetty \
services \
shells \
termcap-BSD \
termcap-Linux; do
	mv ${PKG}/etc/${f}{.0nouveau,}
done

# On s'assure de la présence d'un fichier 'termcap' par défaut (on prend celui de Linux) :
cp -a ${PKG}/etc/termcap{-Linux,}

# On place les fichiers de configuration utilisateur (thèmes, .xsession, etc.) :
cp -ra $CWD/skel ${PKG}/etc/

# On garde un '/etc/HOSTNAME' en majuscules pour maximiser la compatibilité :
ln -sf hostname ${PKG}/etc/HOSTNAME

# On crée un 'mtab' vide :
touch ${PKG}/etc/mtab

# On place les fichiers journaux en veillant à ne rien écraser :
touch     ${PKG}/var/log/{wtmp,lastlog}.0nouveau
chmod 664 ${PKG}/var/log/wtmp.0nouveau

# On place 'utmp' en veillant à ne rien écraser :
touch     ${PKG}/var/run/utmp.0nouveau
chmod 664 ${PKG}/var/run/utmp.0nouveau

# On restreint les permissions sur *shadow :
chmod 640 ${PKG}/etc/{,g}shadow.0nouveau

# On compile et on place le manuel de 0linux :
txt2tags -t html -o ${PKG}/usr/doc/${NAMETGZ}-${VERSION}/0linux.html $CWD/0linux-man.t2t || true
txt2tags -t man  -o ${PKG}/usr/man/man7/0linux.7                     $CWD/0linux-man.t2t || true

# On crée ce fichier pour identifier le système :
cat > ${PKG}/etc/os-release << "EOF"
# Identification du système et de sa version :
NAME=0Linux
VERSION="zeta"
ID=0linux
VERSION_ID=zeta
PRETTY_NAME="0Linux"
ANSI_COLOR="1;32"
HOME_URL="http://0linux.org/"

# Compatibilité avec la syntaxe de 'lsb-release' :
DISTRIB_ID=0linux
DISTRIB_RELEASE=zeta
DISTRIB_DESCRIPTION="0Linux zeta"

EOF

# On crée le fichier de blacklist des modules non désirés :
cat > ${PKG}/etc/modprobe.d/blacklist.conf.0nouveau << "EOF"
# Chaque module listé ici ne sera pas chargé par le système.

# Pilote 8139 alternatif (mais tout de même nécessaire à certaines cartes...) :
blacklist 8139cp

# Pilote déprécié BCM4318 :
blacklist bcm43xx

# Module IEEE1394 sur Ethernet. A la fâcheuse tendance à trop souvent se charger
# en présence de simples ports IEEE1394 :
blacklist eth1394

# de4x5 et dmfe gèrent les mêmes périphériques :
blacklist de4x5
blacklist dmfe

# Entre en conflit avec e100 :
blacklist eepro100

# evbug est un outil de débogage à charger soi-même :
blacklist evbug

# Les modules utilisés pour les points d'accès sans fil, qui entrent en conflit avec
# les pilotes des cartes. À charger soi-même :
blacklist hostap
blacklist hostap_cs
blacklist hostap_pci
blacklist hostap_plx

# Ce module plante souvent :
blacklist hw_random

# Module du haut-parleur/buzzer du PC, pour fans des « bip » :
blacklist pcspkr

# The kernel lists this as "experimental", but for now it's "broken"
blacklist via-ircc

# Modules ALSA pour le son des modems. Ont généralement tendance à
# à casser tout l'audio :
blacklist snd-atiixp-modem
blacklist snd-intel8x0m
blacklist snd-via82xx-modem

# Les framebuffers pour de nombreuses cartes ont un comportement imprévisible.
# À utiliser avec précaution.
blacklist arcfb
blacklist aty128fb
blacklist atyfb
blacklist cirrusfb
blacklist clgenfb
blacklist cyber2000fb
blacklist fbcon-cfb2
blacklist fbcon-cfb4
blacklist fbcon-hga
blacklist fbcon-mfb
blacklist fbcon-vga-planes
blacklist fbgen
blacklist hgafb
blacklist i2c-matroxfb
blacklist i810fb
blacklist intelfb
blacklist kyrofb
blacklist matroxfb_DAC1064
blacklist matroxfb_Ti3026
blacklist matroxfb_accel
blacklist matroxfb_base
blacklist matroxfb_crtc2
blacklist matroxfb_g450
blacklist matroxfb_maven
blacklist matroxfb_misc
blacklist neofb
blacklist nvidiafb
blacklist pm2fb
blacklist pm3fb
blacklist radeonfb
blacklist rivafb
blacklist savagefb
blacklist sisfb
blacklist sstfb
blacklist tdfxfb
blacklist tridentfb
blacklist vga16fb

# Les « watchdogs » sont à charger manuellement, de nombreuses cartes bloquent
# s'ils sont chargés :
blacklist acquirewdt
blacklist advantechwdt
blacklist alim1535_wdt
blacklist alim7101_wdt
blacklist cpu5wdt
blacklist eurotechwdt
blacklist hpwdt
blacklist i6300esb
blacklist iTCO_vendor_support
blacklist iTCO_wdt
blacklist ib700wdt
blacklist ibmasr
blacklist it8712f_wdt
blacklist machzwd
blacklist mixcomwd
blacklist pc87413_wdt
blacklist pcwd
blacklist pcwd_pci
blacklist pcwd_usb
blacklist sbc60xxwdt
blacklist sbc7240_wdt
blacklist sbc8360
blacklist sbc_epx_c3
blacklist sc1200wdt
blacklist sc520_wdt
blacklist scx200_wdt
blacklist smsc37b787_wdt
blacklist softdog
blacklist w83627hf_wdt
blacklist w83697hf_wdt
blacklist w83877f_wdt
blacklist w83977f_wdt
blacklist wafer5823wdt
blacklist wdt
blacklist wdt_pci

EOF

# On crée le fichier de configuration pour les modules gérant l'USB :
cat > ${PKG}/etc/modprobe.d/usb.conf.0nouveau << "EOF"
# On s'assure de lancer d'abord ehci_hcd pour les hôtes USB ohci et uhci
# pour s'éviter des messages d'avertissement du noyau :
softdep uhci-hcd pre: ehci-hcd
softdep ohci-hcd pre: ehci-hcd

EOF

# On crée le fichier de post-installation pour s'assurer de la présence
# des utilisateurs et groupes ainsi que des liens symboliques critiques :
cat $CWD/post-install.sh >> ${PKG}/post-install.sh

# On corrige pour notre suffixe :
sed -i "s@ARCH@${LIBDIRSUFFIX}@g" ${PKG}/post-install.sh

empaqueter

# C'est fini.
