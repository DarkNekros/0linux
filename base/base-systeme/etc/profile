# /etc/profile: ce fichier contient tous les paramètres par défaut utilisés
# par les interpréteurs (shells) de type « Bourne » et assimilés.

# On positionne quelques variables d'environnement :
export MINICOM="-c on"
export MANPATH=/usr/local/man:/usr/man
export HOSTNAME="`cat /etc/HOSTNAME`"
export LESSOPEN="|lesspipe.sh %s"
export LESS="-M"

# Y compris la « locale », via les variables dans la configuration de 0linux :
. /etc/0linux/locale
export LANG="${LANG}"
export LC_ALL="${LC_ALL}"

# Si l'utilisateur n'a pas de fichier '.inputrc', on utilise celui dans /etc.
if [ ! -r "$HOME/.inputrc" ]; then
	export INPUTRC=/etc/inputrc
fi

# On positionne la variable $PATH par défaut du système :
PATH="/usr/local/bin:/usr/bin:/bin:/usr/games"

# Pour root, on s'assure d'ajouter au $PATH les répertoires /usr/local/sbin, 
# /usr/sbin et /sbin car ils peuvent manquer :
if [ "`id -u`" = "0" ]; then
	echo $PATH | grep /usr/local/sbin 1> /dev/null 2> /dev/null
	if [ ! $? = 0 ]; then
		PATH=/usr/local/sbin:/usr/sbin:/sbin:$PATH
	fi
fi

# On positionne par défaut la variable $TERM à 'linux' :
if [ "$TERM" = "" -o "$TERM" = "unknown" ]; then
	TERM=linux
fi

# Ceci concerne ksh. On le garde dans un coin, sait-on jamais :
#if [ "$SHELL" = "/bin/ksh" ]; then
#  VISUAL=emacs
#  VISUAL=gmacs
#  VISUAL=vi
#fi

# Notre invite de commande par défaut. On garde les invites pour d'autres shells
# au cas où :
if [ "$SHELL" = "/bin/pdksh" ]; then
	PS1='! $ '
elif [ "$SHELL" = "/bin/ksh" ]; then
	PS1='! ${PWD/#$HOME/~}$ '
elif [ "$SHELL" = "/bin/zsh" ]; then
	PS1='%n@%m:%~%# '
elif [ "$SHELL" = "/bin/ash" ]; then
	PS1='$ '
else
	PS1='\u@\h:\w\$ '
fi
PS2='> '
export PATH DISPLAY LESS TERM PS1 PS2

# On spécifie le masque par défaut lors des créations de fichiers :
umask 022

# On notifie l'utilisateur s'il a du courriel si les programmes appropriés
# sont installés :
if [ -x /usr/bin/biff ]; then
	biff y 2> /dev/null
fi

# On exécute tout script se terminant en « .sh » trouvé dans /etc/profile.d :
for script in /etc/profile.d/*.sh ; do
	if [ -x $script ]; then
		. $script
	fi
done
unset script

# Pour les utilisateurs normaux, on ajoute le répertoire courant à la variable $PATH :
if [ ! "`id -u`" = "0" ]; then
	PATH="$PATH:."
fi
