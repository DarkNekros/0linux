#!/usr/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

# On définit la catégorie du paquet :
for categ in base extra opt xfce xorg; do
	if [ ! "$(echo $(dirname $CWD) | grep $categ)" = "" ]; then
		PKGCAT="$categ"
	fi
done

VERSION=${VERSION:-0.3}
NAMETGZ=${NAMETGZ:-network-scripts}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets/$PKGCAT}
ARCH=${ARCH:-noarch}
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Configuration réseau"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then # -1 pour l'UTF-8
	echo "La description du slack-desc est trop longue (80 caractères max.) !"
	exit 1
fi

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}

# On crée les différents répertoires pour les scripts :
mkdir -p ${PKG}/etc/rc.d
mkdir -p ${PKG}/sbin

# On copie les scripts en veillant à ne rien écraser :
cp -a $CWD/scripts/rc.ip_forward ${PKG}/etc/rc.d/rc.ip_forward.new

for script in HOSTNAME host.conf hosts.allow hosts.deny hosts.equiv hosts networks protocols reseau.conf resolv.conf; do
	cp -a $CWD/scripts/${script} ${PKG}/etc/${script}.new
	chmod 644 ${PKG}/etc/${script}.new
done

chmod 600 ${PKG}/etc/reseau.conf.new

# On place le script de configuration réseau '0reseau' :
cp -a $CWD/scripts/0reseau ${PKG}/sbin
chmod 755 ${PKG}/sbin/0reseau

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi

# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc

# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/usr/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
	elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
		mv $NEW $OLD
	fi
}

config etc/rc.d/rc.ip_forward.new
config etc/hosts.deny.new
config etc/hosts.equiv.new
config etc/networks.new
config etc/resolv.conf.new
config etc/host.conf.new
config etc/hosts.allow.new
config etc/protocols.new
config etc/reseau.conf.new

# Inutiles, et sûrement déjà configurés :
rm -f etc/HOSTNAME.new
rm -f etc/hosts.new
rm -f etc/resolv.conf.new

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
