#!/bin/env bash
# Voyez le fichier LICENCES pour connaître la licence de ce script.

set -e
umask 022
CWD=$(pwd)

NAMESRC=${NAMESRC:-udev}
VERSION=${VERSION:-164}
EXT=${EXT:-tar.bz2}
NAMETGZ=${NAMETGZ:-udev}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
OUT=${OUT:-/usr/local/paquets}
ARCH=${ARCH:-x86_64}
TARGET32=${TARGET32:-i686-0-linux-gnu}
TARGET64=${TARGET64:-$ARCH-0-linux-gnu}
BUILD32=${BUILD32:--m32}
BUILD64=${BUILD64:--m64}

WGET=${WGET:-http://www.kernel.org/pub/linux/utils/kernel/hotplug/$NAMESRC-$VERSION.$EXT}
DOC="COPYING ChangeLog INSTALL NEWS README TODO"
########## |-----handy-ruler------------------------------------------------------|
SLACKDESC="Système de nœuds périphériques dynamiques"
########################################

SLACKDESCCHARS=`echo ${SLACKDESC} | wc -m`
if [ $(echo "${SLACKDESCCHARS} -1" | bc) -ge 80 ]; then
	echo "La description est trop longue (80 caractères max.) !"
	exit 1
fi

# On télécharge les sources :
if [ ! -r ${NAMESRC}-${VERSION}.$EXT ]; then
	wget -vc $WGET -O ${NAMESRC}-${VERSION}.$EXT.part
	mv ${NAMESRC}-${VERSION}.$EXT.part ${NAMESRC}-${VERSION}.$EXT
fi

# On les vérifie :
tar ft ${NAMESRC}-${VERSION}.$EXT 1> /dev/null 2> /dev/null

# On crée le répertoire d'accueil :
PKG=$TMP/build/${NAMETGZ}
mkdir -p ${PKG}/{dev,lib/{firmware,udev}}
mkdir -p ${PKG}/lib/udev/devices/{pts,shm}

# On déballe et on se place dans les sources :
NAME=$(tar ft ${NAMESRC}-${VERSION}.$EXT | head -n 1 | awk -F/ '{ print $1 }')
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
fakeroot tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On applique les règles de Slackware à ce nouveau udev (typiquement, les
# noeud cdrw/dvdrw, cdwriter/dvdwriter, etc.) :
cat $CWD/udev-146.rule_generator.diff | patch -p1

# Compilation pour 32 bits :
SLKCFLAGS="-O2 -march=i686 -pipe"
LIBDIRSUFFIX=""
CC="gcc ${BUILD32}" CXX="g++ ${BUILD32}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--sysconfdir=/etc \
	--sbindir=/sbin \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--libexecdir=/lib/udev \
	--disable-introspection \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--build=${TARGET32}

fakeroot make
fakeroot make install DESTDIR=${PKG}

# On re-déballe et on se re-place dans les sources :
cd $TMP
rm -rf ${NAME}
echo "Extraction en cours..."
fakeroot tar xf $CWD/${NAMESRC}-${VERSION}.$EXT
cd ${NAME}

# On re-vérifie les permissions des sources :
find . \
	\( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# On applique les règles de Slackware à ce nouveau udev (typiquement, les
# noeud cdrw/dvdrw, cdwriter/dvdwriter, etc.) :
cat $CWD/udev-146.rule_generator.diff | patch -p1

# Compilation pour 64 bits :
SLKCFLAGS="-O2 -fPIC -pipe"
LIBDIRSUFFIX="64"
CC="gcc ${BUILD64}" CXX="g++ ${BUILD64}" \
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" \
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX} -L/lib${LIBDIRSUFFIX}" \
./configure \
	--prefix=/usr \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--sysconfdir=/etc \
	--sbindir=/sbin \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--libexecdir=/lib/udev \
	--disable-introspection \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--build=${TARGET64}

fakeroot make
fakeroot make install DESTDIR=${PKG}

# scsi_id et vol_id sont nécessaires dans /sbin :
ln -sf ../lib/udev/scsi_id ${PKG}/sbin/scsi_id
ln -sf ../lib/udev/vol_id ${PKG}/sbin/vol_id

# On crée les répetoires pour les fichiers de configuration :
mkdir -p ${PKG}/etc/{modprobe,rc}.d
mkdir -p ${PKG}/etc/udev/rules.d
mkdir -p ${PKG}/lib/firmware

# On place udev.conf (et on écrase sciemment l'ancien fichier) :
cp -a $CWD/config/udev.conf ${PKG}/etc/udev/udev.conf

# On copie les règles de Slackware :
cp -a $CWD/config/rules.d/* ${PKG}/lib/udev/rules.d

# On copie le script du service ainsi ainsi que les options des modules :
cp -a $CWD/config/rc.d/rc.udev.new ${PKG}/etc/rc.d/rc.udev.new
cp -a $CWD/config/modprobe.d/* ${PKG}/etc/modprobe.d

# On corrige les permissions de la configuration :
find ${PKG}/etc -type f -exec chmod 644 {} \;
find ${PKG}/etc -type d -exec chmod 755 {} \;
chmod 755 ${PKG}/etc/rc.d/rc.udev.new

# On ajoute les périphériques supplémentaires non pris en charge par udev :
fakeroot tar xf $CWD/udev-fixed-devices.tar.gz -C ${PKG}

# On ajoute le script de Slackware 'nethelper.sh' :
cp -a $CWD/config/scripts/nethelper.sh ${PKG}/lib/udev
chmod 755 ${PKG}/lib/udev/nethelper.sh

# On compresse les manuels :
if [ -d ${PKG}/usr/man ]; then
	find ${PKG}/usr/man -type f -name "*.*" -exec gzip -9 {} \;
	for manpage in $(find ${PKG}/usr/man -type l) ; do
		ln -s $(readlink $manpage).gz ${manpage}.gz
		rm -f ${manpage}
	done
fi
# On compresse les pages info :
if [ -d ${PKG}/usr/info ]; then
	rm -f ${PKG}/usr/info/dir
	gzip -9 ${PKG}/usr/info/*.info*
fi

# Installation de la documentation :
mkdir -p ${PKG}/usr/doc/${NAMETGZ}-${VERSION}
cp -a ${DOC} ${PKG}/usr/doc/${NAMETGZ}-${VERSION}

# On installe le slack-desc :
mkdir -p ${PKG}/install
echo "${NAMETGZ}: ${NAMETGZ} (${SLACKDESC})" > ${PKG}/install/slack-desc
# On installe le doinst.sh :
cat > ${PKG}/install/doinst.sh << "EOF"
#!/bin/env bash
if [ -x sbin/ldconfig ]; then
	sbin/ldconfig -r .
fi

config() {
	NEW="$1"
	OLD="$(dirname $NEW)/$(basename $NEW .new)"
	
	if [ ! -r $OLD ]; then
		mv $NEW $OLD
		elif [ "$(diff -abBEiw $OLD $NEW)" = "" ]; then
			mv $NEW $OLD
	fi
}

# On nettoie les éventuels fichiers réguliers existants :
rm -f lib/udev/devices/{console,null,ppp,urandom,zero}
rm -f dev/{console,null}

# On crée les nœuds périphériques importants dans '/dev' car on en a besoin
# avant l'exécution de 'udev' à l'amorçage :
mknod -m 600 dev/console c 5 1
mknod -m 666 dev/null c 1 3

# On crée les nœuds périphériques importants dans '/lib/udev' :
mknod -m 600 lib/udev/devices/console c 5 1
mknod -m 666 lib/udev/devices/null c 1 3
mknod -m 660 lib/udev/devices/ppp c 0 108
mknod -m 666 lib/udev/devices/urandom c 9 1
mknod -m 666 lib/udev/devices/zero c 1 5


# Le script de Slackware, permettant de créer des fichiers en .conf sous
# /etc/modprobe.d (y compris les fichiers .bak, .orig et .new) :
for modfile in $(ls etc/modprobe.d/ | grep -v "\.\(conf\|bak\|orig\|new\)"); do
	if [ -e etc/modprobe.d/$modfile -a ! -e etc/modprobe.d/$modfile.conf ]; then
		mv etc/modprobe.d/$modfile etc/modprobe.d/$modfile.conf
	elif [ -e etc/modprobe.d/$modfile -a -e etc/modprobe.d/$modfile.conf ]; then
		mv etc/modprobe.d/$modfile etc/modprobe.d/$modfile.bak
	fi
done

config etc/modprobe.d/blacklist.conf.new
config etc/modprobe.d/isapnp.conf.new
config etc/modprobe.d/psmouse.conf.new
config etc/modprobe.d/usb-controller.conf.new
config etc/rc.d/rc.udev.new

EOF

# On "strippe" tout ce qu'on trouve :
find ${PKG} -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "shared object" | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find ${PKG} -type f | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null || true

# On vérifie enfin les droits de la doc, souvent problématiques :
find ${PKG}/usr/{doc,man,info} -type d -exec chmod 755 {} \; 2> /dev/null || true
find ${PKG}/usr/{doc,man,info} -type f -exec chmod 644 {} \; 2> /dev/null || true

# Empaquetage !
cd ${PKG}
mkdir -p $OUT
PACKAGING="
	chown root:root . -R
	/sbin/spkcpio . $OUT/${NAMETGZ}-${VERSION}-${ARCH}-$BUILD
	rm -rf ${PKG}
	if [ ! \"X${NAME}\" = \"X\" ]; then
		if [ -d $TMP/${NAME} ]; then
			rm -rf $TMP/${NAME}
		fi
	fi"

if [ "$(which fakeroot 2> /dev/null)" ]; then
	echo "${PACKAGING}" | fakeroot
else
	su -c "${PACKAGING}"
fi

exit 0
